
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.ArrayList;
import java.util.Locale;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JSlider;
import javax.swing.SwingConstants;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.ui.RectangleInsets;

/**
 *
 * @author USUARIO
 */
public class GUI extends javax.swing.JFrame {

    ArrayList<String> informacio2020;
    ArrayList<String> informacio2019;
    ArrayList<String> informacio2018;

    ArrayList<Integer> EstadisticaCasillas;

    ArrayList<Integer> Valores = new ArrayList<>();
    int Elementos[] = new int[33];
    int ElementosCheck[] = new int[20];

    RegistrarVariablesCasillas obj = new RegistrarVariablesCasillas();
    RegistrarVariablesRadioButtons obj2 = new RegistrarVariablesRadioButtons();
    double max = 79.799 / 100;
    int Maxcon = (int) max;
    int añosAcum;

    Calculos calculos = new Calculos();

    ChartPanel panel_grafi = new ChartPanel(null);
    ChartPanel barras = new ChartPanel(null);
    ChartPanel chebarras = new ChartPanel(null);

    GUI obj3;

    int mousex, mousey;

    public GUI() {
        ImageIcon icon = new ImageIcon("estadisticas.png");
        Image image = icon.getImage();
        setIconImage(image);

        Valores.add(0);
        Valores.add(0);

        llenarArray2020();
        llenarArray2019();
        llenarArray2018();
        // imprimir();
        initComponents();
        grafico_pastel();
        
        grafica_barras_1();
        SeleccionarComboBox();
          
        percentilbarra.setEnabled(true);
        putajeglobalbarra.setEnabled(true);

        grafico_barras1.setVisible(false);
        graficopastelbarra.setVisible(false);
        progreso1.setVisible(false);
        grafica_check_barras();
        Bus1.setVisible(false);
        Bus2.setVisible(false);
        Bus3.setVisible(false);
        Bus5.setVisible(false);
        Bus4.setVisible(false);
        RadiodocumentoTodos.setVisible(false);
        RadioTodosArea.setVisible(false);
        RadioTodosGeneros.setVisible(false);
        RadioGeneroColegioTodos.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupo1 = new javax.swing.ButtonGroup();
        grupoAños = new javax.swing.ButtonGroup();
        ID = new javax.swing.ButtonGroup();
        Generos = new javax.swing.ButtonGroup();
        ColegioGeneroGrupo = new javax.swing.ButtonGroup();
        AreaColegio = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        Barra1 = new javax.swing.JPanel();
        SalirBoton = new MiBoton();
        Titulo2 = new javax.swing.JLabel();
        Titulo1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        Filtr = new javax.swing.JScrollPane();
        Filtrador = new javax.swing.JPanel();
        Bus5 = new MiBoton();
        Bus1 = new MiBoton();
        Bus4 = new MiBoton();
        Bus2 = new MiBoton();
        Bus3 = new MiBoton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        mate = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        natu = new javax.swing.JLabel();
        ing = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        glop = new javax.swing.JLabel();
        año2020 = new javax.swing.JCheckBox();
        año2019 = new javax.swing.JCheckBox();
        Masculino = new javax.swing.JCheckBox();
        año2018 = new javax.swing.JCheckBox();
        Cedula = new javax.swing.JCheckBox();
        jSeparator5 = new javax.swing.JSeparator();
        TarjetaIdentidad = new javax.swing.JCheckBox();
        Femenino = new javax.swing.JCheckBox();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();
        desempeñoingles = new javax.swing.JComboBox<>();
        jSeparator8 = new javax.swing.JSeparator();
        JornadaSelec = new javax.swing.JComboBox<>();
        ColegiogeneroMIXTO = new javax.swing.JCheckBox();
        ColegiogeneroFEMENINO = new javax.swing.JCheckBox();
        ColegiogeneroMasculino = new javax.swing.JCheckBox();
        jSeparator10 = new javax.swing.JSeparator();
        AreaRural = new javax.swing.JCheckBox();
        AreaUrbana = new javax.swing.JCheckBox();
        jSeparator11 = new javax.swing.JSeparator();
        matematica = new javax.swing.JSlider();
        jSeparator12 = new javax.swing.JSeparator();
        jSeparator13 = new javax.swing.JSeparator();
        jSeparator14 = new javax.swing.JSeparator();
        jSeparator15 = new javax.swing.JSeparator();
        modo = new javax.swing.JToggleButton();
        radioañostodos = new javax.swing.JRadioButton();
        radioaño2020 = new javax.swing.JRadioButton();
        radioaño2019 = new javax.swing.JRadioButton();
        radioaño2018 = new javax.swing.JRadioButton();
        Radiodocumentocedula = new javax.swing.JRadioButton();
        RadiodocumentoTodos = new javax.swing.JRadioButton();
        RadiodocumentoID1 = new javax.swing.JRadioButton();
        RadioTodosGeneros = new javax.swing.JRadioButton();
        RadioMasculino1 = new javax.swing.JRadioButton();
        RadioFemenino1 = new javax.swing.JRadioButton();
        RadioGeneroColegioTodos = new javax.swing.JRadioButton();
        RadioGeneroColegioMixto1 = new javax.swing.JRadioButton();
        RadioGeneroColegioFemenino = new javax.swing.JRadioButton();
        RadioGeneroColegioMasculino = new javax.swing.JRadioButton();
        RadioTodosArea = new javax.swing.JRadioButton();
        RadioRural = new javax.swing.JRadioButton();
        RadioUrbana = new javax.swing.JRadioButton();
        jSeparator18 = new javax.swing.JSeparator();
        lectura = new javax.swing.JSlider();
        percentilbarra = new javax.swing.JSlider();
        naturales = new javax.swing.JSlider();
        inglees = new javax.swing.JSlider();
        putajeglobalbarra = new JSlider(JSlider.HORIZONTAL, 0, 500, 0);
        Estractoselect = new javax.swing.JComboBox<>();
        desempeñolectura1 = new javax.swing.JComboBox<>();
        desempeñomatematica1 = new javax.swing.JComboBox<>();
        desempeñonaturales1 = new javax.swing.JComboBox<>();
        mateTex1 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        etiquetavalorlectura = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        InfoIngles = new javax.swing.JLabel();
        InfoInnaturales = new javax.swing.JLabel();
        InfoImate = new javax.swing.JLabel();
        Infolectura = new javax.swing.JLabel();
        Manual = new MiBoton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        Info = new javax.swing.JPanel();
        Check1 = new javax.swing.JPanel();
        B1 = new javax.swing.JPanel();
        añoe = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        informe1 = new rojerusan.componentes.RSProgressCircle();
        grafico_barras1 = new javax.swing.JPanel();
        progreso1 = new javax.swing.JPanel();
        etiquetavalorlectura3 = new javax.swing.JLabel();
        barraRegistroLectura = new rojerusan.componentes.RSProgressBar();
        PuntajeLabelMatematica = new javax.swing.JLabel();
        barraRegistroMatematica = new rojerusan.componentes.RSProgressBar();
        barraRegistroNaturales = new rojerusan.componentes.RSProgressBar();
        PuntajeLabelNaturales = new javax.swing.JLabel();
        barraRegistroIngles = new rojerusan.componentes.RSProgressBar();
        PuntajeLabelIngles = new javax.swing.JLabel();
        PuntajeLabelGlobal = new javax.swing.JLabel();
        PuntajeLabelPercentil = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        PuntajeLabelLectura = new javax.swing.JLabel();
        lectorpersonas = new javax.swing.JLabel();
        registropersonasmatematica = new javax.swing.JLabel();
        registropersonasNaturales = new javax.swing.JLabel();
        RegistroPersonasIngles = new javax.swing.JLabel();
        RegistroPersonaGloval = new javax.swing.JLabel();
        RegistroPersonaPercentil = new javax.swing.JLabel();
        barraRegistroglobal = new rojerusan.componentes.RSProgressCircle();
        barraRegistroPercentil = new rojerusan.componentes.RSProgressCircle();
        jSeparator1 = new javax.swing.JSeparator();
        DesempeñoIngles = new rojerusan.componentes.RSProgressBar();
        Desempeñolectura = new rojerusan.componentes.RSProgressBar();
        Desempeñomate = new rojerusan.componentes.RSProgressBar();
        Desempeñonaturales = new rojerusan.componentes.RSProgressBar();
        jLabel11 = new javax.swing.JLabel();
        LabelDesNaturales = new javax.swing.JLabel();
        LabelDesMate = new javax.swing.JLabel();
        LabelDesIngles = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        Limpiar = new MiBoton();
        graficopastelbarra = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAutoRequestFocus(false);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFocusCycleRoot(false);
        setFocusTraversalPolicyProvider(true);
        setLocation(new java.awt.Point(0, 0));
        setLocationByPlatform(true);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Barra1.setBackground(new java.awt.Color(255, 255, 255));
        Barra1.setFocusCycleRoot(true);
        Barra1.setOpaque(false);
        Barra1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                Barra1MouseDragged(evt);
            }
        });
        Barra1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Barra1MousePressed(evt);
            }
        });
        Barra1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        SalirBoton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cerca (2).png"))); // NOI18N
        SalirBoton.setContentAreaFilled(false);
        SalirBoton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SalirBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirBotonActionPerformed(evt);
            }
        });
        Barra1.add(SalirBoton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 50, 50));

        Titulo2.setBackground(new java.awt.Color(255, 255, 255));
        Titulo2.setFont(new java.awt.Font("Century Gothic", 1, 36)); // NOI18N
        Titulo2.setForeground(new java.awt.Color(255, 255, 255));
        Titulo2.setText("Copu");
        Barra1.add(Titulo2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 0, -1, -1));

        Titulo1.setBackground(new java.awt.Color(255, 102, 0));
        Titulo1.setFont(new java.awt.Font("Century Gothic", 1, 36)); // NOI18N
        Titulo1.setForeground(new java.awt.Color(255, 102, 51));
        Titulo1.setText("Edu");
        Barra1.add(Titulo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 0, -1, -1));

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 310, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        Barra1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 310, -1));

        jPanel1.add(Barra1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1050, 49));

        Filtr.setBorder(null);
        Filtr.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Filtr.setOpaque(false);
        Filtr.getVerticalScrollBar().setUnitIncrement(20);
        //ocultar

        //ocultar

        Filtrador.setBackground(new java.awt.Color(0, 102, 102));
        Filtrador.setForeground(new java.awt.Color(0, 102, 102));
        Filtrador.setMinimumSize(new java.awt.Dimension(278, 3000));
        Filtrador.setPreferredSize(new java.awt.Dimension(200, 4300));
        Filtrador.setRequestFocusEnabled(false);
        Filtrador.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Bus5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/mediolim.png"))); // NOI18N
        Bus5.setToolTipText("<html><center><font face='Century Gothic' size = '4' color='orange'><b>Limpiar");
        Bus5.setContentAreaFilled(false);
        Bus5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Bus5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bus5ActionPerformed(evt);
            }
        });
        Filtrador.add(Bus5, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 1250, -1, -1));

        Bus1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/mediolim.png"))); // NOI18N
        Bus1.setToolTipText("<html><center><font face='Century Gothic' size = '4' color='orange'><b>Limpiar");
        Bus1.setContentAreaFilled(false);
        Bus1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Bus1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bus1ActionPerformed(evt);
            }
        });
        Filtrador.add(Bus1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 320, -1, -1));

        Bus4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/mediolim.png"))); // NOI18N
        Bus4.setToolTipText("<html><center><font face='Century Gothic' size = '4' color='orange'><b>Limpiar");
        Bus4.setContentAreaFilled(false);
        Bus4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Bus4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bus4ActionPerformed(evt);
            }
        });
        Filtrador.add(Bus4, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 1020, -1, -1));

        Bus2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/mediolim.png"))); // NOI18N
        Bus2.setToolTipText("<html><center><font face='Century Gothic' size = '4' color='orange'><b>Limpiar");
        Bus2.setContentAreaFilled(false);
        Bus2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Bus2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bus2ActionPerformed(evt);
            }
        });
        Filtrador.add(Bus2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 540, -1, -1));

        Bus3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/mediolim.png"))); // NOI18N
        Bus3.setToolTipText("<html><center><font face='Century Gothic' size = '4' color='orange'><b>Limpiar");
        Bus3.setContentAreaFilled(false);
        Bus3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Bus3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bus3ActionPerformed(evt);
            }
        });
        Filtrador.add(Bus3, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 730, -1, -1));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 102, 0));
        Filtrador.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 3840, 80, 50));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 102, 0));
        jLabel2.setText("Año");
        Filtrador.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, 40, 50));

        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 102, 0));
        jLabel3.setText("Genero");
        Filtrador.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 600, 260, 50));

        jLabel4.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 102, 0));
        jLabel4.setText("Calendario");
        Filtrador.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 1320, 260, 50));

        jLabel5.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 102, 0));
        jLabel5.setText("Estracto");
        Filtrador.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 1540, 260, 50));

        jLabel6.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 102, 0));
        jLabel6.setText("Genero del colegio");
        Filtrador.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 810, 260, 50));

        jLabel7.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 102, 0));
        jLabel7.setText("Area del colegio");
        Filtrador.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 1090, 260, 50));

        jLabel8.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 102, 0));
        jLabel8.setText("puntaje lectura");
        Filtrador.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 1780, 140, 50));

        jLabel9.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 102, 0));
        jLabel9.setText("desempeño lectura");
        Filtrador.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 1940, 260, 50));

        mate.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        mate.setForeground(new java.awt.Color(255, 102, 0));
        Filtrador.add(mate, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 2200, 60, 50));

        jLabel12.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 102, 0));
        jLabel12.setText("desempeño matematicas");
        Filtrador.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 2380, 260, 50));

        jLabel13.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 102, 0));
        jLabel13.setText("desempeño naturales");
        Filtrador.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 2860, 260, 50));

        natu.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        natu.setForeground(new java.awt.Color(255, 102, 0));
        Filtrador.add(natu, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 2640, 60, 50));

        ing.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        ing.setForeground(new java.awt.Color(255, 102, 0));
        Filtrador.add(ing, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 3090, 70, 50));

        jLabel16.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 102, 0));
        jLabel16.setText("desempeño ingles ");
        Filtrador.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 3310, 170, 50));

        glop.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        glop.setForeground(new java.awt.Color(255, 102, 0));
        glop.setText("");
        Filtrador.add(glop, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 3610, 140, 50));

        año2020.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        año2020.setForeground(new java.awt.Color(255, 255, 255));
        año2020.setText("2020");
        año2020.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                año2020ActionPerformed(evt);
            }
        });
        Filtrador.add(año2020, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, -1, -1));

        año2019.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        año2019.setForeground(new java.awt.Color(255, 255, 255));
        año2019.setText("2019");
        año2019.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                año2019ActionPerformed(evt);
            }
        });
        Filtrador.add(año2019, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 260, -1, -1));

        Masculino.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        Masculino.setForeground(new java.awt.Color(255, 255, 255));
        Masculino.setText("Masculino");
        Masculino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MasculinoActionPerformed(evt);
            }
        });
        Filtrador.add(Masculino, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 670, -1, -1));

        año2018.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        año2018.setForeground(new java.awt.Color(255, 255, 255));
        año2018.setText("2018");
        año2018.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                año2018ActionPerformed(evt);
            }
        });
        Filtrador.add(año2018, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 300, -1, -1));

        Cedula.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        Cedula.setForeground(new java.awt.Color(255, 255, 255));
        Cedula.setText("Cedula");
        Cedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CedulaActionPerformed(evt);
            }
        });
        Filtrador.add(Cedula, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 460, -1, -1));
        Filtrador.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 1780, 260, 10));

        TarjetaIdentidad.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        TarjetaIdentidad.setForeground(new java.awt.Color(255, 255, 255));
        TarjetaIdentidad.setText("Tarjeta de identidad");
        TarjetaIdentidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TarjetaIdentidadActionPerformed(evt);
            }
        });
        Filtrador.add(TarjetaIdentidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 510, -1, -1));

        Femenino.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        Femenino.setForeground(new java.awt.Color(255, 255, 255));
        Femenino.setText("Femenino");
        Femenino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FemeninoActionPerformed(evt);
            }
        });
        Filtrador.add(Femenino, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 710, -1, -1));
        Filtrador.add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 380, 260, 10));
        Filtrador.add(jSeparator7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 590, 260, 10));

        desempeñoingles.setBackground(new java.awt.Color(0, 102, 102));
        desempeñoingles.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        desempeñoingles.setForeground(new java.awt.Color(255, 102, 0));
        desempeñoingles.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A-", "A1", "A2", "B+", "B1" }));
        desempeñoingles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                desempeñoinglesActionPerformed(evt);
            }
        });
        Filtrador.add(desempeñoingles, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 3380, 180, 50));
        Filtrador.add(jSeparator8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 1320, 260, 10));

        JornadaSelec.setBackground(new java.awt.Color(0, 102, 102));
        JornadaSelec.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        JornadaSelec.setForeground(new java.awt.Color(255, 102, 0));
        JornadaSelec.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A", "B", "OTRO" }));
        JornadaSelec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JornadaSelecActionPerformed(evt);
            }
        });
        Filtrador.add(JornadaSelec, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 1380, 180, 50));

        ColegiogeneroMIXTO.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        ColegiogeneroMIXTO.setForeground(new java.awt.Color(255, 255, 255));
        ColegiogeneroMIXTO.setText("Mixto");
        ColegiogeneroMIXTO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ColegiogeneroMIXTOActionPerformed(evt);
            }
        });
        Filtrador.add(ColegiogeneroMIXTO, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 880, -1, -1));

        ColegiogeneroFEMENINO.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        ColegiogeneroFEMENINO.setForeground(new java.awt.Color(255, 255, 255));
        ColegiogeneroFEMENINO.setText("Femenino");
        ColegiogeneroFEMENINO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ColegiogeneroFEMENINOActionPerformed(evt);
            }
        });
        Filtrador.add(ColegiogeneroFEMENINO, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 930, -1, -1));

        ColegiogeneroMasculino.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        ColegiogeneroMasculino.setForeground(new java.awt.Color(255, 255, 255));
        ColegiogeneroMasculino.setText("Masculino");
        ColegiogeneroMasculino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ColegiogeneroMasculinoActionPerformed(evt);
            }
        });
        Filtrador.add(ColegiogeneroMasculino, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 980, -1, -1));
        Filtrador.add(jSeparator10, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 2200, 260, 10));

        AreaRural.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        AreaRural.setForeground(new java.awt.Color(255, 255, 255));
        AreaRural.setText("Rural");
        AreaRural.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AreaRuralActionPerformed(evt);
            }
        });
        Filtrador.add(AreaRural, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 1160, -1, -1));

        AreaUrbana.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        AreaUrbana.setForeground(new java.awt.Color(255, 255, 255));
        AreaUrbana.setText("Urbana");
        AreaUrbana.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AreaUrbanaActionPerformed(evt);
            }
        });
        Filtrador.add(AreaUrbana, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 1210, -1, -1));
        Filtrador.add(jSeparator11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 810, 260, 10));

        matematica.setMajorTickSpacing(10); // Espaciado entre las marcas principales
        matematica.setPaintTicks(true); // Dibuja las marcas
        matematica.setPaintLabels(true);
        matematica.setValue(0);

        matematica.setMajorTickSpacing(10);
        matematica.setBackground(new java.awt.Color(255, 102, 0));
        matematica.setForeground(new java.awt.Color(255, 255, 255));
        matematica.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                matematicaStateChanged(evt);
            }
        });
        Filtrador.add(matematica, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 2290, 250, -1));
        Filtrador.add(jSeparator12, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 1540, 260, 10));
        Filtrador.add(jSeparator13, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 2640, 260, 10));
        Filtrador.add(jSeparator14, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 3560, 260, 10));
        Filtrador.add(jSeparator15, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 3090, 260, 10));

        modo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/boton-de-encendido (1).png"))); // NOI18N
        modo.setText("<html><center><font face='Century Gothic' size = '2' color='white'><b>Consultas fijas desactivadas");
        modo.setToolTipText("<html><center><font face='Century Gothic' size = '4' color='orange'><b>Convierte todas las casillas de<br>seleccion multiple en<br>radiobuttons para seleccion fija<br>y viceversa");
        modo.setContentAreaFilled(false);
        modo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        modo.setHideActionText(true);
        modo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        modo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        modo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modoActionPerformed(evt);
            }
        });
        Filtrador.add(modo, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, 110, -1));

        radioañostodos.setVisible(false);
        radioañostodos.setBackground(new java.awt.Color(0, 102, 102));
        grupoAños.add(radioañostodos);
        radioañostodos.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        radioañostodos.setForeground(new java.awt.Color(255, 255, 255));
        radioañostodos.setText("Todos");
        radioañostodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioañostodosActionPerformed(evt);
            }
        });
        Filtrador.add(radioañostodos, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 340, -1, -1));

        radioañostodos.setVisible(false);
        radioaño2020.setBackground(new java.awt.Color(0, 102, 102));
        grupoAños.add(radioaño2020);
        radioaño2020.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        radioaño2020.setForeground(new java.awt.Color(255, 255, 255));
        radioaño2020.setText("2020");
        radioaño2020.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioaño2020ActionPerformed(evt);
            }
        });
        Filtrador.add(radioaño2020, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, -1, -1));

        radioañostodos.setVisible(false);
        radioaño2019.setBackground(new java.awt.Color(0, 102, 102));
        grupoAños.add(radioaño2019);
        radioaño2019.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        radioaño2019.setForeground(new java.awt.Color(255, 255, 255));
        radioaño2019.setText("2019");
        Filtrador.add(radioaño2019, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 260, -1, -1));

        radioañostodos.setVisible(false);
        radioaño2018.setBackground(new java.awt.Color(0, 102, 102));
        grupoAños.add(radioaño2018);
        radioaño2018.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        radioaño2018.setForeground(new java.awt.Color(255, 255, 255));
        radioaño2018.setText("2018");
        radioaño2018.setToolTipText("");
        Filtrador.add(radioaño2018, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 300, -1, -1));

        Radiodocumentocedula.setBackground(new java.awt.Color(0, 102, 102));
        ID.add(Radiodocumentocedula);
        Radiodocumentocedula.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        Radiodocumentocedula.setForeground(new java.awt.Color(255, 255, 255));
        Radiodocumentocedula.setText("Cedula\n");
        Filtrador.add(Radiodocumentocedula, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 460, -1, -1));

        RadiodocumentoTodos.setBackground(new java.awt.Color(0, 102, 102));
        ID.add(RadiodocumentoTodos);
        RadiodocumentoTodos.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        RadiodocumentoTodos.setForeground(new java.awt.Color(255, 255, 255));
        RadiodocumentoTodos.setText("Todos");
        Filtrador.add(RadiodocumentoTodos, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 560, -1, -1));

        RadiodocumentoID1.setBackground(new java.awt.Color(0, 102, 102));
        ID.add(RadiodocumentoID1);
        RadiodocumentoID1.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        RadiodocumentoID1.setForeground(new java.awt.Color(255, 255, 255));
        RadiodocumentoID1.setText("Tarjeta de identidad");
        Filtrador.add(RadiodocumentoID1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 510, -1, -1));

        Generos.add(RadioTodosGeneros);
        RadioTodosGeneros.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        RadioTodosGeneros.setForeground(new java.awt.Color(255, 255, 255));
        RadioTodosGeneros.setText("Todos");
        Filtrador.add(RadioTodosGeneros, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 750, -1, -1));

        Generos.add(RadioMasculino1);
        RadioMasculino1.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        RadioMasculino1.setForeground(new java.awt.Color(255, 255, 255));
        RadioMasculino1.setText("Masculino");
        Filtrador.add(RadioMasculino1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 670, -1, -1));

        Generos.add(RadioFemenino1);
        RadioFemenino1.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        RadioFemenino1.setForeground(new java.awt.Color(255, 255, 255));
        RadioFemenino1.setText("Femenino");
        Filtrador.add(RadioFemenino1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 710, -1, -1));

        ColegioGeneroGrupo.add(RadioGeneroColegioTodos);
        RadioGeneroColegioTodos.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        RadioGeneroColegioTodos.setForeground(new java.awt.Color(255, 255, 255));
        RadioGeneroColegioTodos.setText("Todos");
        Filtrador.add(RadioGeneroColegioTodos, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 1030, -1, -1));

        ColegioGeneroGrupo.add(RadioGeneroColegioMixto1);
        RadioGeneroColegioMixto1.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        RadioGeneroColegioMixto1.setForeground(new java.awt.Color(255, 255, 255));
        RadioGeneroColegioMixto1.setText("Mixto");
        Filtrador.add(RadioGeneroColegioMixto1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 880, -1, -1));

        ColegioGeneroGrupo.add(RadioGeneroColegioFemenino);
        RadioGeneroColegioFemenino.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        RadioGeneroColegioFemenino.setForeground(new java.awt.Color(255, 255, 255));
        RadioGeneroColegioFemenino.setText("Femenino");
        Filtrador.add(RadioGeneroColegioFemenino, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 930, -1, -1));

        ColegioGeneroGrupo.add(RadioGeneroColegioMasculino);
        RadioGeneroColegioMasculino.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        RadioGeneroColegioMasculino.setForeground(new java.awt.Color(255, 255, 255));
        RadioGeneroColegioMasculino.setText("Masculino");
        Filtrador.add(RadioGeneroColegioMasculino, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 980, -1, -1));

        AreaColegio.add(RadioTodosArea);
        RadioTodosArea.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        RadioTodosArea.setForeground(new java.awt.Color(255, 255, 255));
        RadioTodosArea.setText("Todos");
        Filtrador.add(RadioTodosArea, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 1260, -1, -1));

        AreaColegio.add(RadioRural);
        RadioRural.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        RadioRural.setForeground(new java.awt.Color(255, 255, 255));
        RadioRural.setText("Rural");
        Filtrador.add(RadioRural, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 1160, -1, -1));

        AreaColegio.add(RadioUrbana);
        RadioUrbana.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        RadioUrbana.setForeground(new java.awt.Color(255, 255, 255));
        RadioUrbana.setText("Urbana");
        Filtrador.add(RadioUrbana, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 1210, -1, -1));
        Filtrador.add(jSeparator18, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 1090, 260, 10));

        lectura.setMajorTickSpacing(10); // Espaciado entre las marcas principales
        lectura.setPaintTicks(true); // Dibuja las marcas
        lectura.setPaintLabels(true);
        lectura.setValue(0);

        lectura.setMajorTickSpacing(10);
        lectura.setBackground(new java.awt.Color(255, 102, 0));
        lectura.setForeground(new java.awt.Color(255, 255, 255));
        lectura.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                lecturaStateChanged(evt);
            }
        });
        Filtrador.add(lectura, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 1860, 250, -1));

        percentilbarra.setMajorTickSpacing(10); // Espaciado entre las marcas principales
        percentilbarra.setPaintTicks(true); // Dibuja las marcas
        percentilbarra.setPaintLabels(true);
        percentilbarra.setValue(0);

        percentilbarra.setMajorTickSpacing(10);
        percentilbarra.setBackground(new java.awt.Color(255, 102, 0));
        percentilbarra.setForeground(new java.awt.Color(255, 255, 255));
        percentilbarra.setEnabled(false);
        percentilbarra.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                percentilbarraStateChanged(evt);
            }
        });
        Filtrador.add(percentilbarra, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 3910, 250, -1));

        naturales.setMajorTickSpacing(10); // Espaciado entre las marcas principales
        naturales.setPaintTicks(true); // Dibuja las marcas
        naturales.setPaintLabels(true);
        naturales.setValue(0);

        naturales.setMajorTickSpacing(10);
        naturales.setBackground(new java.awt.Color(255, 102, 0));
        naturales.setForeground(new java.awt.Color(255, 255, 255));
        naturales.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                naturalesStateChanged(evt);
            }
        });
        Filtrador.add(naturales, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 2730, 250, -1));

        inglees.setMajorTickSpacing(10); // Espaciado entre las marcas principales
        inglees.setPaintTicks(true); // Dibuja las marcas
        inglees.setPaintLabels(true);
        inglees.setValue(0);

        inglees.setMajorTickSpacing(10);
        inglees.setBackground(new java.awt.Color(255, 102, 0));
        inglees.setForeground(new java.awt.Color(255, 255, 255));
        inglees.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ingleesStateChanged(evt);
            }
        });
        Filtrador.add(inglees, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 3180, 250, -1));

        putajeglobalbarra.setMajorTickSpacing(500); // Espaciado entre las marcas principales
        putajeglobalbarra.setPaintTicks(true); // Dibuja las marcas
        putajeglobalbarra.setPaintLabels(true);
        putajeglobalbarra.setValue(0);

        putajeglobalbarra.setMajorTickSpacing(10);
        putajeglobalbarra.setBackground(new java.awt.Color(255, 102, 0));
        putajeglobalbarra.setForeground(new java.awt.Color(255, 255, 255));
        putajeglobalbarra.setEnabled(false);
        putajeglobalbarra.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                putajeglobalbarraStateChanged(evt);
            }
        });
        Filtrador.add(putajeglobalbarra, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 3700, 250, -1));

        Estractoselect.setBackground(new java.awt.Color(0, 102, 102));
        Estractoselect.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        Estractoselect.setForeground(new java.awt.Color(255, 102, 0));
        Estractoselect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Estrato 1", "Estrato 2", "Estrato 3", "Estrato 4", "Estrato 5", "Estrato 6" }));
        Estractoselect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EstractoselectActionPerformed(evt);
            }
        });
        Filtrador.add(Estractoselect, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 1600, 180, 50));

        desempeñolectura1.setBackground(new java.awt.Color(0, 102, 102));
        desempeñolectura1.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        desempeñolectura1.setForeground(new java.awt.Color(255, 102, 0));
        desempeñolectura1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4" }));
        desempeñolectura1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                desempeñolectura1ActionPerformed(evt);
            }
        });
        Filtrador.add(desempeñolectura1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 2000, 180, 50));

        desempeñomatematica1.setBackground(new java.awt.Color(0, 102, 102));
        desempeñomatematica1.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        desempeñomatematica1.setForeground(new java.awt.Color(255, 102, 0));
        desempeñomatematica1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4" }));
        desempeñomatematica1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                desempeñomatematica1ActionPerformed(evt);
            }
        });
        Filtrador.add(desempeñomatematica1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 2460, 180, 50));

        desempeñonaturales1.setBackground(new java.awt.Color(0, 102, 102));
        desempeñonaturales1.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        desempeñonaturales1.setForeground(new java.awt.Color(255, 102, 0));
        desempeñonaturales1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4" }));
        Filtrador.add(desempeñonaturales1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 2930, 180, 50));

        mateTex1.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        mateTex1.setForeground(new java.awt.Color(255, 102, 0));
        mateTex1.setText("puntaje matematica");
        Filtrador.add(mateTex1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 2200, 260, 50));

        jLabel19.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 102, 0));
        jLabel19.setText("puntaje naturales");
        Filtrador.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 2640, 260, 50));

        jLabel20.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 102, 0));
        jLabel20.setText("puntaje ingles");
        Filtrador.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 3090, 130, 50));

        jLabel21.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 102, 0));
        jLabel21.setText("puntaje global:");
        Filtrador.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 3610, 140, 50));

        jLabel10.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 102, 0));
        jLabel10.setText("percentil");
        Filtrador.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 3840, 80, 50));

        etiquetavalorlectura.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        etiquetavalorlectura.setForeground(new java.awt.Color(255, 102, 0));
        etiquetavalorlectura.setToolTipText("");
        etiquetavalorlectura.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Filtrador.add(etiquetavalorlectura, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 1790, 50, 29));

        jLabel22.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 102, 0));
        jLabel22.setText("Tipo de documento");
        Filtrador.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 390, 260, 50));

        InfoIngles.setBackground(new java.awt.Color(255, 102, 0));
        InfoIngles.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        InfoIngles.setForeground(new java.awt.Color(255, 102, 0));
        InfoIngles.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        InfoIngles.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        Filtrador.add(InfoIngles, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 3450, 230, 100));

        InfoInnaturales.setBackground(new java.awt.Color(255, 102, 0));
        InfoInnaturales.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        InfoInnaturales.setForeground(new java.awt.Color(255, 102, 0));
        InfoInnaturales.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        InfoInnaturales.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        Filtrador.add(InfoInnaturales, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 2990, 230, 100));

        InfoImate.setBackground(new java.awt.Color(255, 102, 0));
        InfoImate.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        InfoImate.setForeground(new java.awt.Color(255, 102, 0));
        InfoImate.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        InfoImate.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        Filtrador.add(InfoImate, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 2530, 230, 100));

        Infolectura.setBackground(new java.awt.Color(255, 102, 0));
        Infolectura.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        Infolectura.setForeground(new java.awt.Color(255, 102, 0));
        Infolectura.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        Infolectura.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        Filtrador.add(Infolectura, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 2070, 230, 100));

        Manual.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/signo-de-interrogacion.png"))); // NOI18N
        Manual.setText("<html><center><font face='Century Gothic' size = '2' color='white'><b>Ayuda<br>Help");
        Manual.setContentAreaFilled(false);
        Manual.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Manual.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Manual.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        Manual.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        Manual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ManualActionPerformed(evt);
            }
        });
        Filtrador.add(Manual, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 90, 70, 90));

        jButton4.setText("jButton4");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        Filtrador.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 1490, -1, -1));

        jButton5.setText("jButton5");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        Filtrador.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 1720, -1, -1));

        Filtr.setViewportView(Filtrador);

        jPanel1.add(Filtr, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, -18, 340, 640));

        Info.setBackground(new java.awt.Color(255, 255, 255));
        Info.setForeground(new java.awt.Color(255, 255, 255));
        Info.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Check1.setBackground(new java.awt.Color(255, 255, 255));
        Check1.setForeground(new java.awt.Color(255, 255, 255));
        Check1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        B1.setBackground(new java.awt.Color(255, 255, 255));

        añoe.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        añoe.setForeground(new java.awt.Color(255, 102, 0));

        javax.swing.GroupLayout B1Layout = new javax.swing.GroupLayout(B1);
        B1.setLayout(B1Layout);
        B1Layout.setHorizontalGroup(
            B1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(B1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(añoe, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(618, Short.MAX_VALUE))
        );
        B1Layout.setVerticalGroup(
            B1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(B1Layout.createSequentialGroup()
                .addGap(207, 207, 207)
                .addComponent(añoe, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(79, Short.MAX_VALUE))
        );

        Check1.add(B1, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 0, 830, 340));

        jPanel4.setBackground(new java.awt.Color(51, 0, 204));

        informe1.setForeground(new java.awt.Color(255, 102, 0));
        informe1.setMaximum(558593);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(informe1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(592, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(informe1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        Check1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, 780, 190));

        Info.add(Check1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 850, 560));

        grafico_barras1.setBackground(new java.awt.Color(204, 204, 204));
        grafico_barras1.setForeground(new java.awt.Color(255, 255, 255));
        grafico_barras1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        Info.add(grafico_barras1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 850, 270));

        progreso1.setBackground(new java.awt.Color(255, 255, 255));
        progreso1.setForeground(new java.awt.Color(255, 255, 255));
        progreso1.setPreferredSize(new java.awt.Dimension(100, 100));
        progreso1.setSize(100, 100);
        progreso1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        etiquetavalorlectura3.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        etiquetavalorlectura3.setForeground(new java.awt.Color(255, 102, 0));
        etiquetavalorlectura3.setToolTipText("");
        etiquetavalorlectura3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        progreso1.add(etiquetavalorlectura3, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 560, 80, 50));

        barraRegistroLectura.setForeground(new java.awt.Color(255, 102, 0));
        barraRegistroLectura.setMaximum(7980);
        barraRegistroLectura.setToolTipText("Puntos de lectura critica\nporcentaje de personas\npor X cantidad de puntos");
        barraRegistroLectura.setValue(0);
        barraRegistroLectura.setColorBorde(new java.awt.Color(255, 255, 255));
        barraRegistroLectura.setColorSelBackground(new java.awt.Color(255, 102, 0));
        barraRegistroLectura.setColorSelForeground(new java.awt.Color(0, 102, 102));
        barraRegistroLectura.setOrientacion(rojerusan.componentes.RSProgressBar.ORIENTACION.VERTICAL);
        progreso1.add(barraRegistroLectura, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, 40, 170));

        PuntajeLabelMatematica.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        PuntajeLabelMatematica.setForeground(new java.awt.Color(0, 102, 102));
        progreso1.add(PuntajeLabelMatematica, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 200, 30, 30));

        barraRegistroMatematica.setForeground(new java.awt.Color(0, 102, 102));
        barraRegistroMatematica.setMaximum(7980);
        barraRegistroMatematica.setToolTipText("Puntos de matematica\nporcentaje de personas\npor X cantidad de puntos");
        barraRegistroMatematica.setValue(0);
        barraRegistroMatematica.setColorBorde(new java.awt.Color(255, 255, 255));
        barraRegistroMatematica.setColorSelBackground(new java.awt.Color(0, 102, 102));
        barraRegistroMatematica.setColorSelForeground(new java.awt.Color(255, 102, 0));
        barraRegistroMatematica.setOrientacion(rojerusan.componentes.RSProgressBar.ORIENTACION.VERTICAL);
        progreso1.add(barraRegistroMatematica, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 30, 40, 170));

        barraRegistroNaturales.setForeground(new java.awt.Color(255, 102, 0));
        barraRegistroNaturales.setMaximum(7980);
        barraRegistroNaturales.setToolTipText("Puntos de naturales\nporcentaje de personas\npor X cantidad de puntos");
        barraRegistroNaturales.setValue(0);
        barraRegistroNaturales.setColorBorde(new java.awt.Color(255, 255, 255));
        barraRegistroNaturales.setColorSelBackground(new java.awt.Color(255, 102, 0));
        barraRegistroNaturales.setColorSelForeground(new java.awt.Color(0, 102, 102));
        barraRegistroNaturales.setOrientacion(rojerusan.componentes.RSProgressBar.ORIENTACION.VERTICAL);
        progreso1.add(barraRegistroNaturales, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 30, 40, 170));

        PuntajeLabelNaturales.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        PuntajeLabelNaturales.setForeground(new java.awt.Color(255, 102, 0));
        progreso1.add(PuntajeLabelNaturales, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 200, 30, 30));

        barraRegistroIngles.setForeground(new java.awt.Color(0, 102, 102));
        barraRegistroIngles.setMaximum(7980);
        barraRegistroIngles.setToolTipText("puntos de ingles\nporcentaje de personas\npor X cantidad de puntos");
        barraRegistroIngles.setValue(0);
        barraRegistroIngles.setColorBorde(new java.awt.Color(255, 255, 255));
        barraRegistroIngles.setColorSelBackground(new java.awt.Color(0, 102, 102));
        barraRegistroIngles.setColorSelForeground(new java.awt.Color(255, 102, 0));
        barraRegistroIngles.setOrientacion(rojerusan.componentes.RSProgressBar.ORIENTACION.VERTICAL);
        progreso1.add(barraRegistroIngles, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 30, 40, 170));

        PuntajeLabelIngles.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        PuntajeLabelIngles.setForeground(new java.awt.Color(0, 102, 102));
        progreso1.add(PuntajeLabelIngles, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 200, 30, 30));

        PuntajeLabelGlobal.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        PuntajeLabelGlobal.setForeground(new java.awt.Color(0, 102, 102));
        progreso1.add(PuntajeLabelGlobal, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 40, 50, 30));

        PuntajeLabelPercentil.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        PuntajeLabelPercentil.setForeground(new java.awt.Color(0, 102, 102));
        progreso1.add(PuntajeLabelPercentil, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 140, 50, 30));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/velocimetro.png"))); // NOI18N
        jButton1.setToolTipText("Puntaje (1/100)");
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        progreso1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 200, 50, 30));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/grupo (1).png"))); // NOI18N
        jButton2.setToolTipText("<html>Cantidad de personas<br>Con ese puntaje<br>(79799 personas registradas<br>de forma global)");
        jButton2.setContentAreaFilled(false);
        progreso1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 50, -1));

        PuntajeLabelLectura.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        PuntajeLabelLectura.setForeground(new java.awt.Color(255, 102, 0));
        progreso1.add(PuntajeLabelLectura, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 200, 30, 30));

        lectorpersonas.setBackground(new java.awt.Color(0, 153, 204));
        lectorpersonas.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        lectorpersonas.setForeground(new java.awt.Color(0, 102, 102));
        progreso1.add(lectorpersonas, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 230, 30, 30));

        registropersonasmatematica.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        registropersonasmatematica.setForeground(new java.awt.Color(255, 102, 0));
        progreso1.add(registropersonasmatematica, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 230, 40, 30));

        registropersonasNaturales.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        registropersonasNaturales.setForeground(new java.awt.Color(0, 102, 102));
        progreso1.add(registropersonasNaturales, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 230, 40, 30));

        RegistroPersonasIngles.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        RegistroPersonasIngles.setForeground(new java.awt.Color(255, 102, 0));
        progreso1.add(RegistroPersonasIngles, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 230, 40, 30));

        RegistroPersonaGloval.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        RegistroPersonaGloval.setForeground(new java.awt.Color(255, 102, 0));
        progreso1.add(RegistroPersonaGloval, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 70, 50, 30));

        RegistroPersonaPercentil.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        RegistroPersonaPercentil.setForeground(new java.awt.Color(255, 102, 0));
        progreso1.add(RegistroPersonaPercentil, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 170, 50, 30));

        barraRegistroglobal.setForeground(new java.awt.Color(0, 102, 102));
        barraRegistroglobal.setMaximum(7980);
        barraRegistroglobal.setValue(0);
        barraRegistroglobal.setColorText(new java.awt.Color(0, 102, 102));
        progreso1.add(barraRegistroglobal, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 50, 80, 80));

        barraRegistroPercentil.setForeground(new java.awt.Color(0, 102, 102));
        barraRegistroPercentil.setMaximum(7980);
        barraRegistroPercentil.setValue(0);
        barraRegistroPercentil.setColorText(new java.awt.Color(255, 102, 0));
        progreso1.add(barraRegistroPercentil, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 150, 80, 80));

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        progreso1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 20, 10, 220));

        DesempeñoIngles.setForeground(new java.awt.Color(0, 102, 102));
        DesempeñoIngles.setMaximum(79799);
        DesempeñoIngles.setToolTipText("Desempeño de ingles");
        DesempeñoIngles.setValue(0);
        DesempeñoIngles.setColorBorde(new java.awt.Color(255, 255, 255));
        DesempeñoIngles.setColorSelBackground(new java.awt.Color(0, 102, 102));
        DesempeñoIngles.setColorSelForeground(new java.awt.Color(255, 102, 0));
        DesempeñoIngles.setOrientacion(rojerusan.componentes.RSProgressBar.ORIENTACION.VERTICAL);
        progreso1.add(DesempeñoIngles, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 30, 20, 170));

        Desempeñolectura.setForeground(new java.awt.Color(255, 102, 0));
        Desempeñolectura.setMaximum(79799);
        Desempeñolectura.setToolTipText("Desempeño de Lectura critica");
        Desempeñolectura.setValue(0);
        Desempeñolectura.setColorBorde(new java.awt.Color(255, 255, 255));
        Desempeñolectura.setColorSelBackground(new java.awt.Color(255, 102, 0));
        Desempeñolectura.setColorSelForeground(new java.awt.Color(0, 102, 102));
        Desempeñolectura.setOrientacion(rojerusan.componentes.RSProgressBar.ORIENTACION.VERTICAL);
        progreso1.add(Desempeñolectura, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, 20, 170));

        Desempeñomate.setForeground(new java.awt.Color(0, 102, 102));
        Desempeñomate.setMaximum(79799);
        Desempeñomate.setToolTipText("Desempeño de matematica");
        Desempeñomate.setValue(0);
        Desempeñomate.setColorBorde(new java.awt.Color(255, 255, 255));
        Desempeñomate.setColorSelBackground(new java.awt.Color(0, 102, 102));
        Desempeñomate.setColorSelForeground(new java.awt.Color(255, 102, 0));
        Desempeñomate.setOrientacion(rojerusan.componentes.RSProgressBar.ORIENTACION.VERTICAL);
        progreso1.add(Desempeñomate, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 30, 20, 170));

        Desempeñonaturales.setForeground(new java.awt.Color(255, 102, 0));
        Desempeñonaturales.setMaximum(79799);
        Desempeñonaturales.setToolTipText("Desempeño de naturales");
        Desempeñonaturales.setValue(0);
        Desempeñonaturales.setColorBorde(new java.awt.Color(255, 255, 255));
        Desempeñonaturales.setColorSelBackground(new java.awt.Color(255, 102, 0));
        Desempeñonaturales.setColorSelForeground(new java.awt.Color(0, 102, 102));
        Desempeñonaturales.setOrientacion(rojerusan.componentes.RSProgressBar.ORIENTACION.VERTICAL);
        progreso1.add(Desempeñonaturales, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 30, 20, 170));

        jLabel11.setBackground(new java.awt.Color(255, 102, 0));
        jLabel11.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 102, 0));
        progreso1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 0, 40, 30));

        LabelDesNaturales.setBackground(new java.awt.Color(255, 102, 0));
        LabelDesNaturales.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        LabelDesNaturales.setForeground(new java.awt.Color(255, 102, 0));
        progreso1.add(LabelDesNaturales, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 0, 40, 30));

        LabelDesMate.setBackground(new java.awt.Color(255, 102, 0));
        LabelDesMate.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        LabelDesMate.setForeground(new java.awt.Color(255, 102, 0));
        progreso1.add(LabelDesMate, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 0, 40, 30));

        LabelDesIngles.setBackground(new java.awt.Color(255, 102, 0));
        LabelDesIngles.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        LabelDesIngles.setForeground(new java.awt.Color(255, 102, 0));
        progreso1.add(LabelDesIngles, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 0, 40, 30));

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/grupo (1).png"))); // NOI18N
        jButton3.setToolTipText("<html>Cantidad de personas<br>Con ese puntaje<br>(79799 personas registradas<br>de forma global)");
        jButton3.setContentAreaFilled(false);
        progreso1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 230, 50, -1));

        Info.add(progreso1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 340, 480, 280));

        Limpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/limpiar.png"))); // NOI18N
        Limpiar.setText("<html><center><font face='Century Gothic' size = '1' color='0,102,102'><b>Limpiar");
        Limpiar.setToolTipText("<html><center><font face='Century Gothic' size = '4' color='orange'><b>Limpiar graficos<br>seleccionados");
        Limpiar.setBorder(null);
        Limpiar.setContentAreaFilled(false);
        Limpiar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Limpiar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Limpiar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        Limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LimpiarActionPerformed(evt);
            }
        });
        Info.add(Limpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 570, 40, 50));

        graficopastelbarra.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout graficopastelbarraLayout = new javax.swing.GroupLayout(graficopastelbarra);
        graficopastelbarra.setLayout(graficopastelbarraLayout);
        graficopastelbarraLayout.setHorizontalGroup(
            graficopastelbarraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 340, Short.MAX_VALUE)
        );
        graficopastelbarraLayout.setVerticalGroup(
            graficopastelbarraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );

        Info.add(graficopastelbarra, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, 340, 500));

        jPanel1.add(Info, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, -10, 880, 630));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 606, Short.MAX_VALUE)
        );

        getAccessibleContext().setAccessibleParent(this);

        pack();
    }// </editor-fold>//GEN-END:initComponents
int cont = 0;

    private void LimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LimpiarActionPerformed
        refresco();
        grafico_pastel();
        grafica_barras_1();
        lectura.setValue(0);
        matematica.setValue(0);
        inglees.setValue(0);
        naturales.setValue(0);
        percentilbarra.setValue(0);
        putajeglobalbarra.setValue(0);
        DesempeñoIngles.setValue(0);
        Desempeñomate.setValue(0);
        Desempeñonaturales.setValue(0);
        Desempeñolectura.setValue(0);
        barraRegistroLectura.setValue(0);
        barraRegistroMatematica.setValue(0);
        barraRegistroNaturales.setValue(0);
        barraRegistroIngles.setValue(0);
        barraRegistroPercentil.setValue(0);
        barraRegistroglobal.setValue(0);
        

        InfoIngles.setText("");
        InfoImate.setText("");
        Infolectura.setText("");
        InfoInnaturales.setText("");


    }//GEN-LAST:event_LimpiarActionPerformed

    private void año2020ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_año2020ActionPerformed
        casillasAños2020();
    }//GEN-LAST:event_año2020ActionPerformed

    private void MasculinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MasculinoActionPerformed
        casillasmasculio();
    }//GEN-LAST:event_MasculinoActionPerformed

    private void año2019ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_año2019ActionPerformed
        casillasAños2019();
    }//GEN-LAST:event_año2019ActionPerformed

    private void año2018ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_año2018ActionPerformed
        casillasAños2018();
    }//GEN-LAST:event_año2018ActionPerformed

    private void CedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CedulaActionPerformed
        casillasCedula();
    }//GEN-LAST:event_CedulaActionPerformed

    private void TarjetaIdentidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TarjetaIdentidadActionPerformed
        casillasTI();
    }//GEN-LAST:event_TarjetaIdentidadActionPerformed

    private void FemeninoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FemeninoActionPerformed
        casillasfemenino();
    }//GEN-LAST:event_FemeninoActionPerformed

    private void ColegiogeneroMIXTOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ColegiogeneroMIXTOActionPerformed
        casillasgenerocolegiomixto();
    }//GEN-LAST:event_ColegiogeneroMIXTOActionPerformed

    private void ColegiogeneroFEMENINOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ColegiogeneroFEMENINOActionPerformed
        casillasgenerocolegiofemenino();
    }//GEN-LAST:event_ColegiogeneroFEMENINOActionPerformed

    private void ColegiogeneroMasculinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ColegiogeneroMasculinoActionPerformed
        casillasgenerocolegiomasculino();
    }//GEN-LAST:event_ColegiogeneroMasculinoActionPerformed

    private void AreaRuralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AreaRuralActionPerformed
        casillasarearural();
    }//GEN-LAST:event_AreaRuralActionPerformed

    private void AreaUrbanaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AreaUrbanaActionPerformed
        casillasareaurbana();
    }//GEN-LAST:event_AreaUrbanaActionPerformed

    private void modoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modoActionPerformed

        if (modo.isSelected()) {
            ImageIcon img = new ImageIcon(getClass().getResource("/imagenes/boton-de-encendido.png"));
            modo.setIcon(img);
            modo.setVerticalTextPosition(SwingConstants.BOTTOM);
            modo.setHorizontalTextPosition(SwingConstants.CENTER);
            modo.setText("<html><center><font face='Century Gothic' size = '2' color='white'><b>Consulta fija activadas");
            Labuenaaños();
            actionbus1();
            actionbus2();
            actionbus3();
            actionbus4();
            actionbus5();
            //ocultar paneles
            Check1.setVisible(false);
            grafico_barras1.setVisible(true);
            graficopastelbarra.setVisible(true);
            progreso1.setVisible(true);
            LimpiarActionPerformed(null);
            SeleccionarComboBox();
              
                 
            grafico_pastel();
            grafica_barras_1();
            LimpiarActionPerformed(null);
            Bus1.setVisible(true);
            Bus2.setVisible(true);
            Bus3.setVisible(true);
            Bus5.setVisible(true);
            Bus4.setVisible(true);

        } else {
            ImageIcon img = new ImageIcon(getClass().getResource("/imagenes/boton-de-encendido (1).png"));
            modo.setIcon(img);
            modo.setVerticalTextPosition(SwingConstants.BOTTOM);
            modo.setHorizontalTextPosition(SwingConstants.CENTER);
            modo.setText("<html><center><font face='Century Gothic' size = '2' color='white'><b>Consultas fijas desactivadas");
            Bus1ActionPerformed(null);
            Bus2ActionPerformed(null);
            Bus3ActionPerformed(null);
            Bus4ActionPerformed(null);
            Bus5ActionPerformed(null);
            Lamalaaños();

            //mostrar paneles
            Check1.setVisible(true);
            grafico_barras1.setVisible(false);
            graficopastelbarra.setVisible(false);
            progreso1.setVisible(false);
            LimpiarActionPerformed(null);
   //  casillaestracto();
            Bus1.setVisible(false);
            Bus2.setVisible(false);
            Bus3.setVisible(false);
            Bus5.setVisible(false);
            Bus4.setVisible(false);

            grafico_pastel();
            grafica_barras_1();

        }
    }//GEN-LAST:event_modoActionPerformed

    private void radioañostodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioañostodosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioañostodosActionPerformed

    private void Bus4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bus4ActionPerformed

        //   actionbus4();
        ColegioGeneroGrupo.clearSelection();

        Elementos[8] = 0;
        Elementos[9] = 0;
        Elementos[10] = 0;
        Elementos[15] = 0;

        grafica_barras_1();
        grafico_pastel();
    }//GEN-LAST:event_Bus4ActionPerformed

    private void Bus3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bus3ActionPerformed
//        actionbus3();
        Generos.clearSelection();

        Elementos[5] = 0;
        Elementos[6] = 0;
        Elementos[14] = 0;

        grafica_barras_1();
        grafico_pastel();

    }//GEN-LAST:event_Bus3ActionPerformed

    private void Bus1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bus1ActionPerformed
//        actionbus1();
        grupoAños.clearSelection();

        Elementos[0] = 0;
        Elementos[1] = 0;
        Elementos[2] = 0;
        Elementos[13] = 0;
        grafica_barras_1();
        grafico_pastel();


    }//GEN-LAST:event_Bus1ActionPerformed

    private void Bus2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bus2ActionPerformed

        // actionbus2();
        ID.clearSelection();

        Elementos[3] = 0;
        Elementos[4] = 0;
        Elementos[16] = 0;

        grafica_barras_1();
        grafico_pastel();

    }//GEN-LAST:event_Bus2ActionPerformed

    private void Bus5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bus5ActionPerformed
        // actionbus5();
        AreaColegio.clearSelection();

        Elementos[11] = 0;
        Elementos[12] = 0;
        Elementos[17] = 0;

        grafica_barras_1();
        grafico_pastel();


    }//GEN-LAST:event_Bus5ActionPerformed

    private void lecturaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_lecturaStateChanged
        etiquetavalorlectura.setText("" + lectura.getValue());
        PuntajeLabelLectura.setText("" + lectura.getValue());
        String datoDeCantidad = Integer.toString(lectura.getValue());
        int cantidad = llenarBarraInteractiva(datoDeCantidad, 14);
        //calcular al 100% cuanto seria 

        barraRegistroLectura.setValue(cantidad);
        lectorpersonas.setText("" + cantidad);
        //  JOptionPane.showMessageDialog(null, cantidad);
    }//GEN-LAST:event_lecturaStateChanged

    private void matematicaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_matematicaStateChanged
        mate.setText("" + matematica.getValue());
        PuntajeLabelMatematica.setText("" + matematica.getValue());

        String datoDeCantidad = Integer.toString(matematica.getValue());
        int cantidad = llenarBarraInteractiva(datoDeCantidad, 16);
        barraRegistroMatematica.setValue(cantidad);
        registropersonasmatematica.setText("" + cantidad);
    }//GEN-LAST:event_matematicaStateChanged

    private void naturalesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_naturalesStateChanged
        natu.setText("" + naturales.getValue());
        PuntajeLabelNaturales.setText("" + naturales.getValue());

        String datoDeCantidad = Integer.toString(naturales.getValue());
        int cantidad = llenarBarraInteractiva(datoDeCantidad, 18);
        barraRegistroNaturales.setValue(cantidad);
        registropersonasNaturales.setText("" + cantidad);


    }//GEN-LAST:event_naturalesStateChanged

    private void ingleesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ingleesStateChanged
        ing.setText("" + inglees.getValue());
        PuntajeLabelIngles.setText("" + inglees.getValue());

        String datoDeCantidad = Integer.toString(inglees.getValue());
        int cantidad = llenarBarraInteractiva(datoDeCantidad, 22);
        barraRegistroIngles.setValue(cantidad);
        RegistroPersonasIngles.setText("" + cantidad);

    }//GEN-LAST:event_ingleesStateChanged

    private void putajeglobalbarraStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_putajeglobalbarraStateChanged
        glop.setText("" + putajeglobalbarra.getValue());
        PuntajeLabelGlobal.setText("" + putajeglobalbarra.getValue());

        String datoDeCantidad = Integer.toString(putajeglobalbarra.getValue());
        int cantidad = llenarBarraInteractiva(datoDeCantidad, 24);
        barraRegistroglobal.setValue(cantidad);
        RegistroPersonaGloval.setText("" + cantidad);
    }//GEN-LAST:event_putajeglobalbarraStateChanged

    private void percentilbarraStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_percentilbarraStateChanged
        jLabel1.setText("" + percentilbarra.getValue());
        PuntajeLabelPercentil.setText("" + percentilbarra.getValue());

        String datoDeCantidad = Integer.toString(percentilbarra.getValue());
        int cantidad = llenarBarraInteractiva(datoDeCantidad, 25);
        barraRegistroPercentil.setValue(cantidad);
        RegistroPersonaPercentil.setText("" + cantidad);

    }//GEN-LAST:event_percentilbarraStateChanged

    private void JornadaSelecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JornadaSelecActionPerformed
        if (modo.isSelected()) {
            
        } else {
            casillacalendario();
        }
        

    }//GEN-LAST:event_JornadaSelecActionPerformed

    private void desempeñolectura1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_desempeñolectura1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_desempeñolectura1ActionPerformed

    private void EstractoselectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EstractoselectActionPerformed
        if (modo.isSelected()) {
            
        } else {
                casillaestracto();
        }
    
    }//GEN-LAST:event_EstractoselectActionPerformed

    private void desempeñomatematica1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_desempeñomatematica1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_desempeñomatematica1ActionPerformed

    private void desempeñoinglesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_desempeñoinglesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_desempeñoinglesActionPerformed

    private void ManualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ManualActionPerformed
        libro obj = new libro();
        obj.setVisible(true);
    }//GEN-LAST:event_ManualActionPerformed

    private void Barra1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Barra1MousePressed
        mousex = evt.getX();
        mousey = evt.getY();
    }//GEN-LAST:event_Barra1MousePressed

    private void Barra1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Barra1MouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - mousex, y - mousey);
    }//GEN-LAST:event_Barra1MouseDragged

    private void SalirBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirBotonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_SalirBotonActionPerformed

    private void radioaño2020ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioaño2020ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioaño2020ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        ElementosCheck [5] = 0;
        informe1.setValue(ElementosCheck[0]+ElementosCheck[1]+ElementosCheck[3]+ElementosCheck[4]+ElementosCheck[5]+ElementosCheck[6]);
        grafica_check_barras();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
       ElementosCheck [6] = 0;
       resetestracto();
       informe1.setValue(ElementosCheck[0]+ElementosCheck[1]+ElementosCheck[3]+ElementosCheck[4]+ElementosCheck[5]+ElementosCheck[6]);
        grafica_check_barras();
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup AreaColegio;
    private javax.swing.JCheckBox AreaRural;
    private javax.swing.JCheckBox AreaUrbana;
    private javax.swing.JPanel B1;
    private javax.swing.JPanel Barra1;
    private javax.swing.JButton Bus1;
    private javax.swing.JButton Bus2;
    private javax.swing.JButton Bus3;
    private javax.swing.JButton Bus4;
    private javax.swing.JButton Bus5;
    private javax.swing.JCheckBox Cedula;
    private javax.swing.JPanel Check1;
    private javax.swing.ButtonGroup ColegioGeneroGrupo;
    private javax.swing.JCheckBox ColegiogeneroFEMENINO;
    private javax.swing.JCheckBox ColegiogeneroMIXTO;
    private javax.swing.JCheckBox ColegiogeneroMasculino;
    private rojerusan.componentes.RSProgressBar DesempeñoIngles;
    private rojerusan.componentes.RSProgressBar Desempeñolectura;
    private rojerusan.componentes.RSProgressBar Desempeñomate;
    private rojerusan.componentes.RSProgressBar Desempeñonaturales;
    private javax.swing.JComboBox<String> Estractoselect;
    protected javax.swing.JCheckBox Femenino;
    private javax.swing.JScrollPane Filtr;
    private javax.swing.JPanel Filtrador;
    private javax.swing.ButtonGroup Generos;
    private javax.swing.ButtonGroup ID;
    private javax.swing.JPanel Info;
    private javax.swing.JLabel InfoImate;
    private javax.swing.JLabel InfoIngles;
    private javax.swing.JLabel InfoInnaturales;
    private javax.swing.JLabel Infolectura;
    private javax.swing.JComboBox<String> JornadaSelec;
    private javax.swing.JLabel LabelDesIngles;
    private javax.swing.JLabel LabelDesMate;
    private javax.swing.JLabel LabelDesNaturales;
    private javax.swing.JButton Limpiar;
    private javax.swing.JButton Manual;
    protected javax.swing.JCheckBox Masculino;
    private javax.swing.JLabel PuntajeLabelGlobal;
    private javax.swing.JLabel PuntajeLabelIngles;
    private javax.swing.JLabel PuntajeLabelLectura;
    private javax.swing.JLabel PuntajeLabelMatematica;
    private javax.swing.JLabel PuntajeLabelNaturales;
    private javax.swing.JLabel PuntajeLabelPercentil;
    private javax.swing.JRadioButton RadioFemenino1;
    private javax.swing.JRadioButton RadioGeneroColegioFemenino;
    private javax.swing.JRadioButton RadioGeneroColegioMasculino;
    private javax.swing.JRadioButton RadioGeneroColegioMixto1;
    private javax.swing.JRadioButton RadioGeneroColegioTodos;
    private javax.swing.JRadioButton RadioMasculino1;
    private javax.swing.JRadioButton RadioRural;
    private javax.swing.JRadioButton RadioTodosArea;
    private javax.swing.JRadioButton RadioTodosGeneros;
    private javax.swing.JRadioButton RadioUrbana;
    private javax.swing.JRadioButton RadiodocumentoID1;
    private javax.swing.JRadioButton RadiodocumentoTodos;
    private javax.swing.JRadioButton Radiodocumentocedula;
    private javax.swing.JLabel RegistroPersonaGloval;
    private javax.swing.JLabel RegistroPersonaPercentil;
    private javax.swing.JLabel RegistroPersonasIngles;
    private javax.swing.JButton SalirBoton;
    private javax.swing.JCheckBox TarjetaIdentidad;
    private javax.swing.JLabel Titulo1;
    private javax.swing.JLabel Titulo2;
    public javax.swing.JCheckBox año2018;
    public javax.swing.JCheckBox año2019;
    public javax.swing.JCheckBox año2020;
    private javax.swing.JLabel añoe;
    private rojerusan.componentes.RSProgressBar barraRegistroIngles;
    private rojerusan.componentes.RSProgressBar barraRegistroLectura;
    private rojerusan.componentes.RSProgressBar barraRegistroMatematica;
    private rojerusan.componentes.RSProgressBar barraRegistroNaturales;
    private rojerusan.componentes.RSProgressCircle barraRegistroPercentil;
    private rojerusan.componentes.RSProgressCircle barraRegistroglobal;
    private javax.swing.JComboBox<String> desempeñoingles;
    private javax.swing.JComboBox<String> desempeñolectura1;
    private javax.swing.JComboBox<String> desempeñomatematica1;
    private javax.swing.JComboBox<String> desempeñonaturales1;
    private javax.swing.JLabel etiquetavalorlectura;
    private javax.swing.JLabel etiquetavalorlectura3;
    private javax.swing.JLabel glop;
    private javax.swing.JPanel grafico_barras1;
    private javax.swing.JPanel graficopastelbarra;
    private javax.swing.ButtonGroup grupo1;
    private javax.swing.ButtonGroup grupoAños;
    private rojerusan.componentes.RSProgressCircle informe1;
    private javax.swing.JLabel ing;
    private javax.swing.JSlider inglees;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JSeparator jSeparator13;
    private javax.swing.JSeparator jSeparator14;
    private javax.swing.JSeparator jSeparator15;
    private javax.swing.JSeparator jSeparator18;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JLabel lectorpersonas;
    private javax.swing.JSlider lectura;
    private javax.swing.JLabel mate;
    private javax.swing.JLabel mateTex1;
    private javax.swing.JSlider matematica;
    private javax.swing.JToggleButton modo;
    private javax.swing.JLabel natu;
    private javax.swing.JSlider naturales;
    private javax.swing.JSlider percentilbarra;
    private javax.swing.JPanel progreso1;
    private javax.swing.JSlider putajeglobalbarra;
    protected javax.swing.JRadioButton radioaño2018;
    protected javax.swing.JRadioButton radioaño2019;
    protected javax.swing.JRadioButton radioaño2020;
    public javax.swing.JRadioButton radioañostodos;
    private javax.swing.JLabel registropersonasNaturales;
    private javax.swing.JLabel registropersonasmatematica;
    // End of variables declaration//GEN-END:variables
public void grafica_barras_1() {

        DefaultCategoryDataset datos = new DefaultCategoryDataset();

        int año1 = Elementos[0];
        int año2 = Elementos[1];
        int año3 = Elementos[2];
        int todosAños = Elementos[13];
        int cedula = Elementos[3];
        int tarjetaIdentidad = Elementos[4];
        int todosID = Elementos[16];
        int Masculino = Elementos[5];
        int femenino = Elementos[6];
        int Noidentificado = Elementos[7];
        int TodosGeneros = Elementos[14];
        int Masculinocolegio = Elementos[8];
        int femeninocolegio = Elementos[9];
        int mixto = Elementos[10];
        int TodosTiposDeColegio = Elementos[15];
        int rural = Elementos[11];
        int urbana = Elementos[12];
        int todazona = Elementos[17];

        datos.setValue(año1, "Año", "2020");
        datos.setValue(año2, "Año", "2019");
        datos.setValue(año3, "Año", "2018");
        datos.setValue(todosAños, "Años", "Todos los años");

        datos.setValue(cedula, "Identificacion", "Cedula");
        datos.setValue(tarjetaIdentidad, "Identificacion", "T.I");
        datos.setValue(todosID, "identificacion", "todas las identificaciones");

        datos.setValue(Masculino, "Genero", "Masculino");
        datos.setValue(femenino, "Genero", "Femenino");
        datos.setValue(TodosGeneros, "Genero", "Todos los generos");

        datos.setValue(mixto, "Genero del colegio", "Mixto");
        datos.setValue(Masculinocolegio, "Tipo de colegio", "Colegio masculino");
        datos.setValue(femeninocolegio, "Tipo de colegio", "Colegio femenino");
        datos.setValue(TodosTiposDeColegio, "Tipo de colegio", "Todo tipo de colegio");

        datos.setValue(rural, "Zona", "Rural");
        datos.setValue(urbana, "Zona", "Urbana");
        datos.setValue(todazona, "Zona", "Todas las zonas");

        JFreeChart grafico_1 = ChartFactory.createBarChart3D(
                "", // Título del gráfico
                "", // Etiqueta para el eje de las categorías
                "", // Etiqueta para el eje de los valores
                datos, // DatasetVERTICAL
                PlotOrientation.HORIZONTAL, // Orientación del gráfico
                true, // Mostrar leyenda
                true, // Mostrar tooltips (información al pasar el ratón)
                false // Mostrar URLs (no utilizado)
        );

        // Personalización de la apariencia del gráfico
        CategoryPlot plot = grafico_1.getCategoryPlot();
        BarRenderer renderer = (BarRenderer) plot.getRenderer();
        renderer.setSeriesPaint(0, Color.BLUE); // Color de las barras
        plot.setBackgroundPaint(Color.WHITE); // Color de fondo del gráfico
        plot.setRangeGridlinesVisible(true); // Mostrar líneas de cuadrícula en el eje Y
        NumberAxis rangeAxis = (NumberAxis) plot.getRangeAxis();
        rangeAxis.setTickLabelsVisible(false);
        ChartPanel barras = new ChartPanel(grafico_1);
        barras.setMouseWheelEnabled(true);

        // Ajusta el tamaño y la ubicación del panel del gráfico
        barras.setPreferredSize(new Dimension(800, 600)); // Tamaño del panel
        barras.setVisible(true);

        // Agrega el panel del gráfico al contenedor deseado (por ejemplo, un JPanel llamado grafico_barras1)
        grafico_barras1.removeAll(); // Limpia cualquier componente anterior en el contenedor
        grafico_barras1.setLayout(new BorderLayout());
        grafico_barras1.add(barras, BorderLayout.CENTER);

        // Repinta el contenedor para mostrar el nuevo gráfico
        grafico_barras1.revalidate();
        grafico_barras1.repaint();

    }

    public void grafica_check_barras() {
        DefaultCategoryDataset datos = new DefaultCategoryDataset();

        int año = ElementosCheck[0];
        int documento = ElementosCheck[1];
        int generoestudiantes = ElementosCheck[2];
        int generocolegio = ElementosCheck[3];
        int areacolegio = ElementosCheck[4];
        int calendario = ElementosCheck[5];
        int estracto = ElementosCheck[6];

        datos.setValue(año, "Años", "Años");
        datos.setValue(documento, "Tipo de documento", "Identificaciones");
        datos.setValue(generoestudiantes, "Generos de los estudiantes", "Generos de los estudiantes");
        datos.setValue(generocolegio, "Genero del colegio", "Genero del colegio");
        datos.setValue(areacolegio, "Area del colegio", "Area del colegio");
        datos.setValue(calendario, "Calendario", "Calendario");
        datos.setValue(estracto, "Estracto del estudiante", "Estracto del estudiante");

        /*
        datos.setValue(cedula, "Identificacion", "Cedula");
        datos.setValue(tarjetaIdentidad, "Identificacion", "T.I");
        datos.setValue(todosID, "identificacion", "todas las identificaciones");

        datos.setValue(Masculino, "Genero", "Masculino");
        datos.setValue(femenino, "Genero", "Femenino");
        datos.setValue(TodosGeneros, "Genero", "Todos los generos");

        datos.setValue(mixto, "Genero del colegio", "Mixto");
        datos.setValue(Masculinocolegio, "Tipo de colegio", "Colegio masculino");
        datos.setValue(femeninocolegio, "Tipo de colegio", "Colegio femenino");
        datos.setValue(TodosTiposDeColegio, "Tipo de colegio", "Todo tipo de colegio");

        datos.setValue(rural, "Zona", "Rural");
        datos.setValue(urbana, "Zona", "Urbana");
        datos.setValue(todazona, "Zona", "Todas las zonas");
         */
        JFreeChart grafiChe = ChartFactory.createBarChart3D(
                "", // Título del gráfico
                "", // Etiqueta para el eje de las categorías
                "", // Etiqueta para el eje de los valores
                datos, // DatasetVERTICAL
                PlotOrientation.HORIZONTAL, // Orientación del gráfico
                true, // Mostrar leyenda
                true, // Mostrar tooltips (información al pasar el ratón)
                false // Mostrar URLs (no utilizado)
        );

        // Personalización de la apariencia del gráfico
        CategoryPlot plot = grafiChe.getCategoryPlot();
        BarRenderer renderer = (BarRenderer) plot.getRenderer();
        renderer.setSeriesPaint(0, Color.BLUE); // Color de las barras
        plot.setBackgroundPaint(Color.WHITE); // Color de fondo del gráfico
        plot.setRangeGridlinesVisible(true); // Mostrar líneas de cuadrícula en el eje Y
        NumberAxis rangeAxis = (NumberAxis) plot.getRangeAxis();
        //  rangeAxis.setTickLabelsVisible(false);

        ChartPanel chebarras = new ChartPanel(grafiChe);
        chebarras.setMouseWheelEnabled(true);

        // Ajusta el tamaño y la ubicación del panel del gráfico
        chebarras.setPreferredSize(new Dimension(800, 600)); // Tamaño del panel
        chebarras.setVisible(true);

        // Agrega el panel del gráfico al contenedor deseado (por ejemplo, un JPanel llamado grafico_barras1)
        B1.removeAll(); // Limpia cualquier componente anterior en el contenedor
        B1.setLayout(new BorderLayout());
        B1.add(chebarras, BorderLayout.CENTER);

        // Repinta el contenedor para mostrar el nuevo gráfico
        B1.revalidate();
        B1.repaint();

    }

    public void grafico_pastel() {
        DefaultPieDataset dato = new DefaultPieDataset();

        //posicion mas grande [31]
        int año1 = Elementos[0];
        int año2 = Elementos[1];
        int año3 = Elementos[2];
        int todosAños = Elementos[13];

        int cedula = Elementos[3];
        int tarjetaIdentidad = Elementos[4];
        int todosID = Elementos[16];

        int Masculino = Elementos[5];
        int femenino = Elementos[6];
        int Noidentificado = Elementos[7];
        int TodosGeneros = Elementos[14];

        int Masculinocolegio = Elementos[8];
        int femeninocolegio = Elementos[9];
        int mixto = Elementos[10];
        int TodosTiposDeColegio = Elementos[15];

        int rural = Elementos[11];
        int urbana = Elementos[12];
        int todazona = Elementos[17];

        int jornadaCompleta = Elementos[18];
        int jornadaMañana = Elementos[19];
        int jornadaNoche = Elementos[20];
        int jornadaSabatina = Elementos[21];
        int jornadaTarde = Elementos[22];
        int jornadaUnica = Elementos[23];

        int estracto1 = Elementos[24];
        int estracto2 = Elementos[25];
        int estracto3 = Elementos[26];
        int estracto4 = Elementos[27];
        int estracto5 = Elementos[28];
        int estracto6 = Elementos[29];
        int sinestracto = Elementos[31];

        dato.setValue("2020", año1);
        dato.setValue("2019", año2);
        dato.setValue("2018", año3);
        dato.setValue("Todos los años", todosAños);
        dato.setValue("Cedula", cedula);
        dato.setValue("Tarjeta de identidad", tarjetaIdentidad);
        dato.setValue("Todos los documentos", todosID);
        dato.setValue("Hombres", Masculino);
        dato.setValue("Mujeres", femenino);
        dato.setValue("Todos los generos", TodosGeneros);
        dato.setValue("No identificado", Noidentificado);
        dato.setValue("Colegios masculinos", Masculinocolegio);
        dato.setValue("Colegios femeninos", femeninocolegio);
        dato.setValue("Colegios mixtos", mixto);
        dato.setValue("Todos los colegios", TodosTiposDeColegio);
        dato.setValue("Zona rural", rural);
        dato.setValue("Zona Urbana", urbana);
        dato.setValue("Todas las zonas", todazona);

        dato.setValue("Calentadio A", jornadaCompleta);
        dato.setValue("Calentadio  B", jornadaMañana);
        dato.setValue("OTRO Calentadio", jornadaNoche);
        dato.setValue(" Sabatina", jornadaSabatina);
        dato.setValue(" Tarde", jornadaTarde);
        dato.setValue("Jornada unica", jornadaUnica);

        dato.setValue("Estracto 1", estracto1);
        dato.setValue("Estracto 2", estracto2);
        dato.setValue("Estracto 3", estracto3);
        dato.setValue("Estracto 4", estracto4);
        dato.setValue("Estracto 5", estracto5);
        dato.setValue("Estracto 6", estracto6);

        dato.setValue("Sin Estracto", sinestracto);

        JFreeChart grafico_pastel = ChartFactory.createPieChart("", dato, true, true, false);
        panel_grafi.setChart(grafico_pastel);

        panel_grafi.setBackground(Color.WHITE);

        PiePlot plot = (PiePlot) grafico_pastel.getPlot();

        // Cambiar el color de las secciones
        plot.setLabelGenerator(null);
        plot.setCircular(false);
        plot.setIgnoreNullValues(true);
        plot.setSectionOutlinesVisible(false);

        plot.setLabelLinksVisible(false);
        plot.setBackgroundPaint(Color.WHITE);

        panel_grafi.setMouseWheelEnabled(true);
        panel_grafi.setLocation(0, 0);
        panel_grafi.setPreferredSize(new Dimension(20, 20));
        panel_grafi.setVisible(true);

        graficopastelbarra.setLayout(new BorderLayout());

        graficopastelbarra.add(panel_grafi);

        pack();
        repaint();
    }

    public void Labuenaaños() {

        //AÑOS
        radioaño2020.setVisible(true);
        radioaño2019.setVisible(true);
        radioaño2018.setVisible(true);
        radioañostodos.setVisible(true);

        año2020.setVisible(false);
        año2019.setVisible(false);
        año2018.setVisible(false);
        //    todosaño.setVisible(false);

        //TIPO DE DOCUMENTO
        RadiodocumentoID1.setVisible(true);
        RadiodocumentoTodos.setVisible(true);
        Radiodocumentocedula.setVisible(true);

        Cedula.setVisible(false);
        TarjetaIdentidad.setVisible(false);
//        TodosTipodeDocumentos.setVisible(false);

        //TIPO DE GENERO 
        Masculino.setVisible(false);
        Femenino.setVisible(false);
        //   TodosGeneros.setVisible(false);

        RadioFemenino1.setVisible(true);
        RadioMasculino1.setVisible(true);
        RadioTodosGeneros.setVisible(true);

        //GENERO DEL COLEGIO (OCULTAR CAJAS)
        ColegiogeneroFEMENINO.setVisible(false);
        ColegiogeneroMIXTO.setVisible(false);
        ColegiogeneroMasculino.setVisible(false);
//        ColegiogeneroTODOS.setVisible(false);

        RadioGeneroColegioFemenino.setVisible(true);
        RadioGeneroColegioMasculino.setVisible(true);
        RadioGeneroColegioMixto1.setVisible(true);
        RadioGeneroColegioTodos.setVisible(true);

        //AREA (OCULTAR CAJAS)
        AreaRural.setVisible(false);
        AreaUrbana.setVisible(false);
//        AreaTodos.setVisible(false);

        RadioRural.setVisible(true);
        RadioUrbana.setVisible(true);
        RadioTodosArea.setVisible(true);

    }

    public void Lamalaaños() {
        //AÑOS
        radioañostodos.setVisible(false);
        radioaño2020.setVisible(false);
        radioaño2019.setVisible(false);
        radioaño2018.setVisible(false);

        año2020.setVisible(true);
        año2019.setVisible(true);
        año2018.setVisible(true);
//        todosaño.setVisible(true);

        //TIPO DE DOCUMEMTNO
        Cedula.setVisible(true);
        TarjetaIdentidad.setVisible(true);
//        TodosTipodeDocumentos.setVisible(true);
        RadiodocumentoTodos.setVisible(false);
        RadiodocumentoID1.setVisible(false);
        RadiodocumentoTodos.setVisible(false);
        Radiodocumentocedula.setVisible(false);

        //GENERO
        RadioFemenino1.setVisible(false);
        RadioMasculino1.setVisible(false);
        RadioTodosGeneros.setVisible(false);

        Masculino.setVisible(true);
        Femenino.setVisible(true);
//        TodosGeneros.setVisible(true);

        //COLEGIO GENERO (MOSTRAR CAJAS DE TEXTO)
        ColegiogeneroFEMENINO.setVisible(true);
        ColegiogeneroMIXTO.setVisible(true);
        ColegiogeneroMasculino.setVisible(true);
        //      ColegiogeneroTODOS.setVisible(true);

        RadioGeneroColegioFemenino.setVisible(false);
        RadioGeneroColegioMasculino.setVisible(false);
        RadioGeneroColegioMixto1.setVisible(false);
        RadioGeneroColegioTodos.setVisible(false);

        //AREA (MOSTRAR CAJAS)
        AreaRural.setVisible(true);
        AreaUrbana.setVisible(true);
//        AreaTodos.setVisible(true);

        RadioRural.setVisible(false);
        RadioUrbana.setVisible(false);
        RadioTodosArea.setVisible(false);

    }

    public void actionbus1() {

        if (modo.isSelected()) {
            radioaño2020.addActionListener(e -> {
                if (radioaño2020.isSelected()) {
                    Elementos[0] = informacio2020.size();
                    grafico_pastel();
                    grafica_barras_1();

                }
            });
            radioaño2019.addActionListener(e -> {
                if (radioaño2019.isSelected()) {
                    Elementos[1] = informacio2019.size();
                    grafico_pastel();
                    grafica_barras_1();

                }
            });
            radioaño2018.addActionListener(e -> {
                if (radioaño2018.isSelected()) {
                    Elementos[2] = informacio2018.size();
                    grafico_pastel();
                    grafica_barras_1();
                }
            });
            radioañostodos.addActionListener(e -> {
                if (radioañostodos.isSelected()) {
                    int elementos = informacio2020.size() + informacio2018.size() + informacio2019.size();
                    Elementos[13] = elementos;
                    grafico_pastel();
                    grafica_barras_1();
                }
            });
        } else {

            if (año2020.isSelected()) {
                obj.setAño2020();
                System.out.println(obj.getAño2020());
                cont++;

            }
            if (año2019.isSelected()) {

                obj.setAño2019();
                System.out.println(obj.getAño2019());

            }
            if (año2018.isSelected()) {
                obj.setAño2018();
                System.out.println(obj.getAño2018());

            }
            /*
            if (todosaño.isSelected()) {
                obj.setTodosaños();
                System.out.println(obj.getTodosaños());

            }*/
        }
    }

    public void actionbus2() {

        if (modo.isSelected()) {
            Radiodocumentocedula.addChangeListener(e -> {
                if (Radiodocumentocedula.isSelected()) {

                    int cedula2020 = calculos.Contador(informacio2020, "CC", 0);
                    int cedula2019 = calculos.Contador(informacio2019, "CC", 0);
                    int cedula2018 = calculos.Contador(informacio2018, "CC", 0);
                    int total = cedula2020 + cedula2019 + cedula2018;

                    Elementos[3] = total;
                    grafico_pastel();
                    grafica_barras_1();

                }
            });
            RadiodocumentoID1.addChangeListener(e -> {
                if (RadiodocumentoID1.isSelected()) {

                    int TI2020 = calculos.Contador(informacio2020, "TI", 0);
                    int TI2019 = calculos.Contador(informacio2019, "TI", 0);
                    int TI2018 = calculos.Contador(informacio2018, "TI", 0);
                    int total = TI2020 + TI2019 + TI2018;
                    Elementos[4] = total;
                    grafico_pastel();
                    grafica_barras_1();
                }
            });
            RadiodocumentoTodos.addChangeListener(e -> {
                if (RadiodocumentoTodos.isSelected()) {

                    int TotalElementos = informacio2020.size() + informacio2018.size() + informacio2019.size();
                    Elementos[16] = TotalElementos;
                    grafico_pastel();
                    grafica_barras_1();
                }
            });
        } else {

            if (Cedula.isSelected()) {
                obj.setCedula();
                System.out.println(obj.getCedula());

            }
            if (TarjetaIdentidad.isSelected()) {

                obj.setID();
                System.out.println(obj.getID());

            }
            /*            if (TodosTipodeDocumentos.isSelected()) {
                obj.setIDtodos();
                System.out.println(obj.getIDtodos());

            }*/
        }

    }

    public void actionbus3() {

        if (modo.isSelected()) {
            RadioMasculino1.addActionListener(e -> {
                if (RadioMasculino1.isSelected()) {

                    int hombre2020 = calculos.Contador(informacio2020, "M", 2);
                    int hombre2019 = calculos.Contador(informacio2019, "M", 2);
                    int hombre2018 = calculos.Contador(informacio2018, "M", 2);
                    int total = hombre2020 + hombre2018 + hombre2019;

                    Elementos[5] = total;

                    grafico_pastel();
                    grafica_barras_1();

                }
            });
            RadioFemenino1.addActionListener(e -> {
                if (RadioFemenino1.isSelected()) {
                    int mujeres2020 = calculos.Contador(informacio2020, "F", 2);
                    int mujeres2019 = calculos.Contador(informacio2019, "F", 2);
                    int mujeres2018 = calculos.Contador(informacio2018, "F", 2);
                    int total = mujeres2020 + mujeres2018 + mujeres2019;

                    Elementos[6] = total;

                    grafico_pastel();
                    grafica_barras_1();

                }
            });
            RadioTodosGeneros.addActionListener(e -> {
                if (RadioTodosGeneros.isSelected()) {
                    int TotalElementos = informacio2020.size() + informacio2018.size() + informacio2019.size();
                    Elementos[14] = TotalElementos;
                    grafico_pastel();
                    grafica_barras_1();

                }
            });
        } else {

            if (Masculino.isSelected()) {

                obj.setHombres();
                System.out.println(obj.getHombres());

            }
            if (Femenino.isSelected()) {

                obj.setMujeres();
                System.out.println(obj.getMujeres());

            }

            /*            if (TodosGeneros.isSelected()) {
                obj.setTodo();
                System.out.println(obj.getTodo());

            }*/
        }

    }

    public void actionbus4() {
        if (modo.isSelected()) {
            RadioGeneroColegioMasculino.addActionListener(e -> {
                if (RadioGeneroColegioMasculino.isSelected()) {
                    int colegiomasculino2020 = calculos.Contador(informacio2020, "MASCULINO", 10);
                    int colegiomasculino2019 = calculos.Contador(informacio2019, "MASCULINO", 10);
                    int colegiomasculino2018 = calculos.Contador(informacio2018, "MASCULINO", 10);
                    int total = colegiomasculino2020 + colegiomasculino2019 + colegiomasculino2018;
                    Elementos[8] = total;
                    grafico_pastel();
                    grafica_barras_1();
                }
            });
            RadioGeneroColegioMixto1.addActionListener(e -> {
                if (RadioGeneroColegioMixto1.isSelected()) {
                    int colegiomixto2020 = calculos.Contador(informacio2020, "MIXTO", 10);
                    int colegiomixto2019 = calculos.Contador(informacio2019, "MIXTO", 10);
                    int colegiomixto2018 = calculos.Contador(informacio2018, "MIXTO", 10);
                    int total = colegiomixto2020 + colegiomixto2019 + colegiomixto2018;
                    Elementos[10] = total;
                    grafico_pastel();
                    grafica_barras_1();
                }
            });
            RadioGeneroColegioFemenino.addActionListener(e -> {
                if (RadioGeneroColegioFemenino.isSelected()) {
                    int colegioFEMENINO2020 = calculos.Contador(informacio2020, "FEMENINO", 10);
                    int colegioFEMENINO2019 = calculos.Contador(informacio2019, "FEMENINO", 10);
                    int colegioFEMENINO2018 = calculos.Contador(informacio2018, "FEMENINO", 10);
                    int total = colegioFEMENINO2020 + colegioFEMENINO2019 + colegioFEMENINO2018;
                    Elementos[9] = total;
                    grafico_pastel();
                    grafica_barras_1();
                }
            });
            RadioGeneroColegioTodos.addActionListener(e -> {
                if (RadioGeneroColegioTodos.isSelected()) {
                    int colegio2020 = calculos.Contador(informacio2020, "FEMENINO", 10) + calculos.Contador(informacio2020, "MASCULINO", 10) + calculos.Contador(informacio2020, "MIXTO", 10);;
                    int colegioO2019 = calculos.Contador(informacio2019, "FEMENINO", 10) + calculos.Contador(informacio2019, "MASCULINO", 10) + calculos.Contador(informacio2019, "MIXTO", 10);;
                    int colegio2018 = calculos.Contador(informacio2018, "FEMENINO", 10) + calculos.Contador(informacio2018, "MASCULINO", 10) + calculos.Contador(informacio2018, "MIXTO", 10);;
                    int total = colegio2020 + colegioO2019 + colegio2018;
                    Elementos[15] = total;
                    grafico_pastel();
                    grafica_barras_1();
                }
            });

        } else {

            if (ColegiogeneroMasculino.isSelected()) {

                obj.setColmasculino();
                System.out.println(obj.getColmasculino());

            }
            if (ColegiogeneroFEMENINO.isSelected()) {

                obj.setColfemenino();
                System.out.println(obj.getColfemenino());

            }
            /*            if (ColegiogeneroTODOS.isSelected()) {
                obj.setColtodos();
                System.out.println(obj.getColtodos());

            }*/
            if (ColegiogeneroMIXTO.isSelected()) {
                obj.setMixto();
                System.out.println(obj.getMixto());

            }
        }

    }

    public void actionbus5() {

        if (modo.isSelected()) {
            RadioRural.addActionListener(e -> {
                if (RadioRural.isSelected()) {

                    int colegioRURAL2020 = calculos.Contador(informacio2020, "RURAL", 12);
                    int colegioRURAL2019 = calculos.Contador(informacio2019, "RURAL", 12);
                    int colegioRURAL2018 = calculos.Contador(informacio2018, "RURAL", 12);
                    int total = colegioRURAL2020 + colegioRURAL2019 + colegioRURAL2018;
                    Elementos[11] = total;
                    grafico_pastel();
                    grafica_barras_1();
                }
            });
            RadioUrbana.addActionListener(e -> {
                if (RadioUrbana.isSelected()) {
                    int colegioURBANO2020 = calculos.Contador(informacio2020, "URBANO", 12);
                    int colegioURBANO2019 = calculos.Contador(informacio2019, "URBANO", 12);
                    int colegioURBANO2018 = calculos.Contador(informacio2018, "URBANO", 12);
                    int total = colegioURBANO2020 + colegioURBANO2019 + colegioURBANO2018;
                    Elementos[12] = total;
                    grafico_pastel();
                    grafica_barras_1();
                }
            });
            RadioTodosArea.addActionListener(e -> {
                if (RadioTodosArea.isSelected()) {
                    int areaTotal = calculos.Contador(informacio2020, "URBANO", 12) + calculos.Contador(informacio2018, "URBANO", 12) + calculos.Contador(informacio2019, "URBANO", 12) + calculos.Contador(informacio2020, "RURAL", 12) + calculos.Contador(informacio2019, "RURAL", 12) + calculos.Contador(informacio2018, "RURAL", 12);
                    Elementos[17] = areaTotal;
                    grafico_pastel();
                    grafica_barras_1();
                }
            });

        } else {

            if (AreaRural.isSelected()) {

                obj.setRural();
                System.out.println(obj.getRural());

            }
            /*            if (AreaTodos.isSelected()) {

                obj.setZonatodos();
                System.out.println(obj.getZonatodos());

            }*/
            if (AreaUrbana.isSelected()) {
                obj.setUrbana();
                System.out.println(obj.getUrbana());

            }
        }
    }

    public void AccionDeLasJornadas() {
        JornadaSelec.addActionListener(e -> {
            String BuscarJornada = (String) JornadaSelec.getSelectedItem();

            int elemento1 = calculos.Contador(informacio2020, BuscarJornada, 11);
            int elemento2 = calculos.Contador(informacio2019, BuscarJornada, 11);
            int elemento3 = calculos.Contador(informacio2018, BuscarJornada, 11);
            switch (BuscarJornada) {
                case "A":
                    Elementos[18] = elemento1 + elemento2 + elemento3;
                    ;
                    break;
                case "B":
                    Elementos[19] = elemento1 + elemento2 + elemento3;
                    ;
                    break;
                case "OTRO":
                    Elementos[20] = elemento1 + elemento2 + elemento3;
                    ;
                    break;

                default:
                    throw new AssertionError();
            }

            grafico_pastel();
            grafica_barras_1();

        });
    }

    public void accionDeEstracto() {
        Estractoselect.addActionListener(e -> {
            String select = (String) Estractoselect.getSelectedItem();

            int elemento1 = calculos.Contador(informacio2020, select, 6);
            int elemento2 = calculos.Contador(informacio2019, select, 6);
            int elemento3 = calculos.Contador(informacio2018, select, 6);
            switch (select) {
                case "Estrato 1":
                    Elementos[24] = elemento1 + elemento2 + elemento3;
                    ;
                    break;
                case "Estrato 2":
                    Elementos[25] = elemento1 + elemento2 + elemento3;
                    ;
                    break;
                case "Estrato 3":
                    Elementos[26] = elemento1 + elemento2 + elemento3;
                    ;
                    break;
                case "Estrato 4":
                    Elementos[27] = elemento1 + elemento2 + elemento3;
                    ;
                    break;
                case "Estrato 5":
                    Elementos[28] = elemento1 + elemento2 + elemento3;
                    ;
                    break;
                case "Estrato 6":
                    Elementos[29] = elemento1 + elemento2 + elemento3;
                    ;
                    break;
                case "Sin Estrato":
                    Elementos[30] = elemento1 + elemento2 + elemento3;
                    ;
                    break;

                default:
                    throw new AssertionError();
            }

            grafico_pastel();
            //     grafica_barras_1();

        }
        );
    }

    public void actionbus8() {
        JOptionPane.showMessageDialog(null, "selecciono: " + lectura.getValue());
    }

    public void AccionDesempeñoLectura() {
        desempeñolectura1.addActionListener(e -> {
            String select = (String) desempeñolectura1.getSelectedItem();
            int cantidad = CalcularDesempeñodebarras(select, 15);
            switch (select) {
                case "1":
                    Desempeñolectura.setValue(cantidad);
                    jLabel11.setText("" + cantidad);
                    Infolectura.setText("<html>existen " + cantidad + " Personas<br> con un desempeño de <br> " + select + " en lectua critica");
                    break;
                case "2":
                    Desempeñolectura.setValue(cantidad);
                    jLabel11.setText("" + cantidad);
                    Infolectura.setText("<html>existen " + cantidad + " Personas<br> con un desempeño de <br> " + select + " en lectua critica");
                    break;
                case "3":
                    Desempeñolectura.setValue(cantidad);
                    jLabel11.setText("" + cantidad);
                    Infolectura.setText("<html>existen " + cantidad + " Personas<br> con un desempeño de <br> " + select + " en lectua critica");
                    break;
                case "4":
                    Desempeñolectura.setValue(cantidad);
                    jLabel11.setText("" + cantidad);
                    Infolectura.setText("<html>existen " + cantidad + " Personas<br> con un desempeño de <br> " + select + " en lectua critica");
                    break;
                default:
                    throw new AssertionError();
            }

        });
    }

    public void actionbus10() {
        JOptionPane.showMessageDialog(null, "selecciono: " + matematica.getValue());
    }

    public void AccionDesempeñoMatematica() {
        desempeñomatematica1.addActionListener(e -> {
            String select = (String) desempeñomatematica1.getSelectedItem();
            int cantidad = CalcularDesempeñodebarras(select, 17);
            switch (select) {
                case "1":
                    Desempeñomate.setValue(cantidad);
                    LabelDesMate.setText("" + cantidad);
                    InfoImate.setText("<html>existen " + cantidad + " Personas<br> con un desempeño de <br> " + select + " en matematica");
                    break;
                case "2":
                    Desempeñomate.setValue(cantidad);
                    LabelDesMate.setText("" + cantidad);
                    InfoImate.setText("<html>existen " + cantidad + " Personas<br> con un desempeño de <br> " + select + " en matematica");
                    break;
                case "3":
                    Desempeñomate.setValue(cantidad);
                    LabelDesMate.setText("" + cantidad);
                    InfoImate.setText("<html>existen " + cantidad + " Personas<br> con un desempeño de <br> " + select + " en matematica");
                    break;
                case "4":
                    Desempeñomate.setValue(cantidad);
                    LabelDesMate.setText("" + cantidad);
                    InfoImate.setText("<html>existen " + cantidad + " Personas<br> con un desempeño de <br> " + select + " en matematica");
                    break;
                default:
                    throw new AssertionError();
            }

        });
    }

    public void actionbus12() {
        JOptionPane.showMessageDialog(null, "selecciono: " + naturales.getValue());
    }

    public void AccionDesempeñoNaturales() {
        desempeñonaturales1.addActionListener(e -> {
            String select = (String) desempeñonaturales1.getSelectedItem();
            int cantidad = CalcularDesempeñodebarras(select, 19);
            switch (select) {
                case "1":
                    Desempeñonaturales.setValue(cantidad);
                    LabelDesNaturales.setText("" + cantidad);
                    InfoInnaturales.setText("<html>existen " + cantidad + " Personas<br> con un desempeño de <br> " + select + " en naturales");
                    break;
                case "2":
                    Desempeñonaturales.setValue(cantidad);
                    LabelDesNaturales.setText("" + cantidad);
                    InfoInnaturales.setText("<html>existen " + cantidad + " Personas<br> con un desempeño de <br> " + select + "  en naturales");
                    break;
                case "3":
                    Desempeñonaturales.setValue(cantidad);
                    LabelDesNaturales.setText("" + cantidad);
                    InfoInnaturales.setText("<html>existen " + cantidad + " Personas<br> con un desempeño de <br> " + select + "  en naturales");
                    break;
                case "4":
                    Desempeñonaturales.setValue(cantidad);
                    LabelDesNaturales.setText("" + cantidad);
                    InfoInnaturales.setText("<html>existen " + cantidad + " Personas<br> con un desempeño de <br> " + select + "  en naturales");
                    break;
                default:
                    throw new AssertionError();
            }
        });
    }

    public void actionbus14() {
        JOptionPane.showMessageDialog(null, "selecciono: " + inglees.getValue());
    }

    public void AccionDesempeñoIngles(int posicion) {

        desempeñoingles.addActionListener(e -> {
            String select = (String) desempeñoingles.getSelectedItem();
            int cantidad;
            switch (select) {
                case "A-":

                    cantidad = llenarBarraInteractiva(select, posicion);
                    //calcular al 100% cuanto seria 
                    DesempeñoIngles.setValue(cantidad);
                    LabelDesIngles.setText("" + cantidad);
                    InfoIngles.setText("<html>existen " + cantidad + " Personas<br> con una calificacion de <br> " + select + " en ingles");

                    break;
                case "A1":
                    cantidad = llenarBarraInteractiva(select, posicion);
                    //calcular al 100% cuanto seria 
                    DesempeñoIngles.setValue(cantidad);
                    LabelDesIngles.setText("" + cantidad);
                    InfoIngles.setText("<html>existen " + cantidad + " Personas<br> con una calificacion de <br> " + select + " en ingles");

                    break;
                case "A2":
                    cantidad = llenarBarraInteractiva(select, posicion);
                    //calcular al 100% cuanto seria 
                    DesempeñoIngles.setValue(cantidad);
                    LabelDesIngles.setText("" + cantidad);
                    InfoIngles.setText("<html>existen " + cantidad + " Personas<br> con una calificacion de <br> " + select + " en ingles");

                    break;
                case "B+":
                    cantidad = llenarBarraInteractiva(select, posicion);
                    //calcular al 100% cuanto seria 
                    DesempeñoIngles.setValue(cantidad);
                    LabelDesIngles.setText("" + cantidad);
                    InfoIngles.setText("<html>existen " + cantidad + " Personas<br> con una calificacion de <br> " + select + " en ingles");
                    break;
                case "B1":
                    cantidad = llenarBarraInteractiva(select, posicion);
                    //calcular al 100% cuanto seria 
                    DesempeñoIngles.setValue(cantidad);
                    LabelDesIngles.setText("" + cantidad);
                    InfoIngles.setText("<html>existen " + cantidad + " Personas<br> con una calificacion de <br> " + select + " en ingles");
                    break;
                default:
                    throw new AssertionError();

            }
        });
    }

    public void actionbusi() {
        actionbus1();
        actionbus2();
        actionbus3();
        actionbus4();
        actionbus5();
        AccionDeLasJornadas();
        accionDeEstracto();
        actionbus8();
        AccionDesempeñoLectura();
        actionbus10();
        AccionDesempeñoMatematica();
        actionbus12();
        AccionDesempeñoNaturales();
        actionbus14();
        AccionDesempeñoIngles(23);
        //    actionbus16();
        //    actionbus17();
    }

    public void llenarArray2020() {
        informacio2020 = new ArrayList<>();
        FileReader fr = null;
        boolean error = false;

        try {
            fr = new FileReader("Saber 11 2020-2.csv");
            //          JOptionPane.showMessageDialog(null, "Arraylist 2020 creado con excito");
        } catch (Exception e) {
            error = true;
            JOptionPane.showMessageDialog(this, "Error al conectar la base de datos",
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
        if (!error) {
            String registro = "";
            BufferedReader br = new BufferedReader(fr);
            String tokens[];

            try {
                while ((registro = br.readLine()) != null) {
                    tokens = registro.split(";");
                    informacio2020.add(registro);

                }
            } catch (Exception e) {
                error = true;
                JOptionPane.showMessageDialog(this, "Error al entrar en la base de datos",
                        "Error", JOptionPane.ERROR_MESSAGE);
            }
            try {
                fr.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error al salir de la base de datos",
                        "Error", JOptionPane.ERROR_MESSAGE);
            }

        }
    }

    public void llenarArray2019() {

        informacio2019 = new ArrayList<>();

        FileReader fr = null;
        boolean error = false;

        try {
            fr = new FileReader("Saber 11 2019-2.csv");

            //          JOptionPane.showMessageDialog(null, "Arraylist 2019 creado con excito");
        } catch (Exception e) {
            error = true;
            JOptionPane.showMessageDialog(this, "Error al conectar la base de datos",
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
        if (!error) {
            String registro = "";
            BufferedReader br = new BufferedReader(fr);
            String tokens[];

            try {
                while ((registro = br.readLine()) != null) {
                    tokens = registro.split(";");
                    informacio2019.add(registro);

                }
            } catch (Exception e) {
                error = true;
                JOptionPane.showMessageDialog(this, "Error al entrar en la base de datos",
                        "Error", JOptionPane.ERROR_MESSAGE);
            }
            try {
                fr.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error al salir de la base de datos",
                        "Error", JOptionPane.ERROR_MESSAGE);
            }

        }

    }

    public void llenarArray2018() {
        informacio2018 = new ArrayList<>();

        FileReader fr = null;
        boolean error = false;

        try {
            fr = new FileReader("Saber 11 2018-1 R.csv");
            //  JOptionPane.showMessageDialog(null, "Arraylist 2018 creado con excito");
        } catch (Exception e) {
            error = true;
            JOptionPane.showMessageDialog(this, "Error al conectar la base de datos",
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
        if (!error) {
            String registro = "";
            BufferedReader br = new BufferedReader(fr);
            String tokens[];

            try {
                while ((registro = br.readLine()) != null) {
                    tokens = registro.split(";");
                    informacio2018.add(registro);

                }
            } catch (Exception e) {
                error = true;
                JOptionPane.showMessageDialog(this, "Error al entrar en la base de datos",
                        "Error", JOptionPane.ERROR_MESSAGE);
            }
            try {
                fr.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error al salir de la base de datos",
                        "Error", JOptionPane.ERROR_MESSAGE);
            }

        }

    }

    public void leerArray() {
        JOptionPane.showMessageDialog(null, "2020");
        for (int j = 0; j < informacio2020.size(); j++) {
            String get1 = informacio2020.get(j);
            System.out.println(get1 + "\n");
        }
        System.out.println("2019----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------");
        JOptionPane.showMessageDialog(null, "2019");
        for (int i = 1; i < informacio2019.size(); i++) {
            String get = informacio2019.get(i);
            System.out.println(get + "\n");
        }
        System.out.println("2018----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------");

        JOptionPane.showMessageDialog(null, "2018");
        for (int i = 0; i < informacio2018.size(); i++) {
            String get = informacio2018.get(i);
            System.out.println(get + "\n");
        }
    }

    public void refresco() {
        for (int i = 0; i < Elementos.length; i++) {
            Elementos[i] = 0;
        }
        for (int i = 0; i < ElementosCheck.length; i++) {
            ElementosCheck[i] = 0;

        }

    }

    public int llenarBarraInteractiva(String dato, int posicion) {
        int respuesta;
        int lectura2020 = calculos.Contador(informacio2020, dato, posicion);
        int lectura2019 = calculos.Contador(informacio2019, dato, posicion);
        int lectura2018 = calculos.Contador(informacio2018, dato, posicion);
        respuesta = lectura2020 + lectura2019 + lectura2018;

        return respuesta;
    }

    public void SeleccionarComboBox() {
        AccionDeLasJornadas();
        accionDeEstracto();
        AccionDesempeñoIngles(23);
        AccionDesempeñoNaturales();
        AccionDesempeñoMatematica();
        AccionDesempeñoLectura();
        casillacalendario();
          casillaestracto();
    }

    public void imprimir() {
        for (int i = 0; i < informacio2020.size(); i++) {
            String get = informacio2020.get(i);
            System.out.println(get);

        }
    }

    public int CalcularDesempeñodebarras(String select, int posicion) {
        int cantidad;
        switch (select) {
            case "1":

                // String valor =  select;
                cantidad = llenarBarraInteractiva(select, posicion);
                //calcular al 100% cuanto seria 

                break;
            case "2":
                cantidad = llenarBarraInteractiva(select, posicion);
                //calcular al 100% cuanto seria 

                break;
            case "3":
                cantidad = llenarBarraInteractiva(select, posicion);
                //calcular al 100% cuanto seria 

                break;
            case "4":
                cantidad = llenarBarraInteractiva(select, posicion);
                //calcular al 100% cuanto seria 

                break;
            default:
                throw new AssertionError();
        }
        return cantidad;
    }

    //calculo de casiilas
    int informacio2020Seleccionado;
    int informacio2019Seleccionado;
    int informacio2018Seleccionado;

    int informaciocedula;
    int informacioTarjetaIdentidad;

    int informaciongeneromasculino;
    int informaciongenerofemenino;

    int informaciongeneromasculinocolegio;
    int informaciongenerofemeninocolegio;
    int informaciongeneromixtocolegio;

    int informacionarearutal;
    int informacionareaurbana;

    int informacioncalendarioA;
    int informacioncalendarioB;
    int informacioncalendarioOtro;

    int estracto1;
    int estracto2;
    int estracto3;
    int estracto4;
    int estracto5;
    int estracto6;
    int sinestracto;

//AÑO
    public void casillasAños2020() {
        if (año2020.isSelected()) {
            informacio2020Seleccionado = informacio2020.size();
        } else {
            informacio2020Seleccionado = 0;
        }
        actualizarTotalesaños();
    }

    public void casillasAños2019() {
        if (año2019.isSelected()) {
            informacio2019Seleccionado = informacio2019.size();
        } else {
            informacio2019Seleccionado = 0;
        }
        actualizarTotalesaños();
    }

    public void casillasAños2018() {
        if (año2018.isSelected()) {
            informacio2018Seleccionado = informacio2018.size();
        } else {
            informacio2018Seleccionado = 0;
        }
        actualizarTotalesaños();
    }

    private void actualizarTotalesaños() {
        ElementosCheck[0] = informacio2020Seleccionado + informacio2019Seleccionado + informacio2018Seleccionado;
        informe1.setValue(ElementosCheck[0]+ElementosCheck[1]+ElementosCheck[3]+ElementosCheck[4]+ElementosCheck[5]+ElementosCheck[6]);
        grafica_check_barras();
    }
//ID

    public void casillasCedula() {
        if (Cedula.isSelected()) {
            int cedula2020 = calculos.Contador(informacio2020, "CC", 0);
            int cedula2019 = calculos.Contador(informacio2019, "CC", 0);
            int cedula2018 = calculos.Contador(informacio2018, "CC", 0);
            informaciocedula = cedula2020 + cedula2019 + cedula2018;

        } else {
            informaciocedula = 0;
        }
        actualizarTotalesID();

    }

    public void casillasTI() {
        if (TarjetaIdentidad.isSelected()) {
            int cedula2020 = calculos.Contador(informacio2020, "TI", 0);
            int cedula2019 = calculos.Contador(informacio2019, "TI", 0);
            int cedula2018 = calculos.Contador(informacio2018, "TI", 0);
            informacioTarjetaIdentidad = cedula2020 + cedula2019 + cedula2018;

        } else {
            informacioTarjetaIdentidad = 0;
        }
        actualizarTotalesID();

    }

    private void actualizarTotalesID() {
        ElementosCheck[1] = informaciocedula + informacioTarjetaIdentidad;
        informe1.setValue(ElementosCheck[0]+ElementosCheck[1]+ElementosCheck[3]+ElementosCheck[4]+ElementosCheck[5]+ElementosCheck[6]);
        
        grafica_check_barras();
    }

    //GENERO
    public void casillasmasculio() {
        if (Masculino.isSelected()) {
            int hombre2020 = calculos.Contador(informacio2020, "M", 2);
            int hombre2019 = calculos.Contador(informacio2019, "M", 2);
            int hombre2018 = calculos.Contador(informacio2018, "M", 2);
            informaciongeneromasculino = hombre2020 + hombre2018 + hombre2019;

        } else {
            informaciongeneromasculino = 0;
        }
        actualizarTotalesgeneros();

    }

    public void casillasfemenino() {
        if (Femenino.isSelected()) {
            int mujer2020 = calculos.Contador(informacio2020, "F", 2);
            int mujer2019 = calculos.Contador(informacio2019, "F", 2);
            int mujer2018 = calculos.Contador(informacio2018, "F", 2);
            informaciongenerofemenino = mujer2020 + mujer2019 + mujer2018;

        } else {
            informaciongenerofemenino = 0;
        }
        actualizarTotalesgeneros();

    }

    private void actualizarTotalesgeneros() {
        ElementosCheck[2] = informaciongenerofemenino + informaciongeneromasculino;
        informe1.setValue(ElementosCheck[0]+ElementosCheck[1]+ElementosCheck[3]+ElementosCheck[4]+ElementosCheck[5]+ElementosCheck[6]);
        grafica_check_barras();
    }

    //INFORMACION GENERO COLEGIO
    public void casillasgenerocolegiomasculino() {
        if (ColegiogeneroMasculino.isSelected()) {
            int colegiomasculino2020 = calculos.Contador(informacio2020, "MASCULINO", 10);
            int colegiomasculino2019 = calculos.Contador(informacio2019, "MASCULINO", 10);
            int colegiomasculino2018 = calculos.Contador(informacio2018, "MASCULINO", 10);
            informaciongeneromasculinocolegio = colegiomasculino2020 + colegiomasculino2019 + colegiomasculino2018;

        } else {
            informaciongeneromasculinocolegio = 0;
        }
        actualizarTotalescasillasgenerocolegio();

    }

    public void casillasgenerocolegiofemenino() {
        if (ColegiogeneroFEMENINO.isSelected()) {
            int colegiomasculino2020 = calculos.Contador(informacio2020, "FEMENINO", 10);
            int colegiomasculino2019 = calculos.Contador(informacio2019, "FEMENINO", 10);
            int colegiomasculino2018 = calculos.Contador(informacio2018, "FEMENINO", 10);
            informaciongenerofemeninocolegio = colegiomasculino2020 + colegiomasculino2019 + colegiomasculino2018;

        } else {
            informaciongenerofemeninocolegio = 0;
        }
        actualizarTotalescasillasgenerocolegio();

    }

    public void casillasgenerocolegiomixto() {
        if (ColegiogeneroMIXTO.isSelected()) {
            int colegiomasculino2020 = calculos.Contador(informacio2020, "MIXTO", 10);
            int colegiomasculino2019 = calculos.Contador(informacio2019, "MIXTO", 10);
            int colegiomasculino2018 = calculos.Contador(informacio2018, "MIXTO", 10);
            informaciongeneromixtocolegio = colegiomasculino2020 + colegiomasculino2019 + colegiomasculino2018;

        } else {
            informaciongeneromixtocolegio = 0;
        }
        actualizarTotalescasillasgenerocolegio();

    }

    private void actualizarTotalescasillasgenerocolegio() {
        ElementosCheck[3] = informaciongeneromasculinocolegio + informaciongenerofemeninocolegio + informaciongeneromixtocolegio;
         informe1.setValue(ElementosCheck[0]+ElementosCheck[1]+ElementosCheck[3]+ElementosCheck[4]+ElementosCheck[5]+ElementosCheck[6]);
        grafica_check_barras();
    }

    //AREA
    public void casillasareaurbana() {
        if (AreaUrbana.isSelected()) {
            int colegiomasculino2020 = calculos.Contador(informacio2020, "URBANO", 12);
            int colegiomasculino2019 = calculos.Contador(informacio2019, "URBANO", 12);
            int colegiomasculino2018 = calculos.Contador(informacio2018, "URBANO", 12);
            informacionareaurbana = colegiomasculino2020 + colegiomasculino2019 + colegiomasculino2018;

        } else {
            informacionareaurbana = 0;
        }
        actualizarTotalescasillasarea();

    }

    public void casillasarearural() {
        if (AreaRural.isSelected()) {
            int colegioRURAL2020 = calculos.Contador(informacio2020, "RURAL", 12);
            int colegioRURAL2019 = calculos.Contador(informacio2019, "RURAL", 12);
            int colegioRURAL2018 = calculos.Contador(informacio2018, "RURAL", 12);
            informacionarearutal = colegioRURAL2020 + colegioRURAL2019 + colegioRURAL2018;

        } else {
            informacionarearutal = 0;
        }
        actualizarTotalescasillasarea();

    }

    private void actualizarTotalescasillasarea() {
        ElementosCheck[4] = informacionareaurbana + informacionarearutal;
        informe1.setValue(ElementosCheck[0]+ElementosCheck[1]+ElementosCheck[3]+ElementosCheck[4]+ElementosCheck[5]+ElementosCheck[6]);
        grafica_check_barras();
    }

    //CALENDARIO
    public void casillacalendario() {
        JornadaSelec.addActionListener(e -> {
            String BuscarJornada = (String) JornadaSelec.getSelectedItem();

            int elemento1 = calculos.Contador(informacio2020, BuscarJornada, 11);
            int elemento2 = calculos.Contador(informacio2019, BuscarJornada, 11);
            int elemento3 = calculos.Contador(informacio2018, BuscarJornada, 11);
            switch (BuscarJornada) {
                case "A":
                    informacioncalendarioA = elemento1 + elemento2 + elemento3;
                    actualizarTotalescalendarios();
                    ;
                    break;
                case "B":
                    informacioncalendarioB = elemento1 + elemento2 + elemento3;
                    actualizarTotalescalendarios();
                    break;
                case "OTRO":
                    informacioncalendarioOtro = elemento1 + elemento2 + elemento3;
                    actualizarTotalescalendarios();
                    break;

                default:
                    throw new AssertionError();
            }

        });

    }

    private void actualizarTotalescalendarios() {
        ElementosCheck[5] = informacioncalendarioA + informacioncalendarioB + informacioncalendarioOtro;
         informe1.setValue(ElementosCheck[0]+ElementosCheck[1]+ElementosCheck[3]+ElementosCheck[4]+ElementosCheck[5]+ElementosCheck[6]);
        grafica_check_barras();


    }
        //ESTRACTO
    public void resetestracto(){
        estracto1 =0;
        estracto2 =0;
        estracto3 =0;
        estracto4 =0;
        estracto5 =0;
     
    }
    
    public void casillaestracto() {
        Estractoselect.addActionListener(e -> {
            String select = (String) Estractoselect.getSelectedItem();

            int elemento1 = calculos.Contador(informacio2020, select, 6);
            int elemento2 = calculos.Contador(informacio2019, select, 6);
            int elemento3 = calculos.Contador(informacio2018, select, 6);
            switch (select) {
                case "Estrato 1":
                    estracto1 = elemento1 + elemento2 + elemento3;
                          actualizarTotalesestracto();
                    ;
                    break;
                case "Estrato 2":
                    estracto2 = elemento1 + elemento2 + elemento3;
                          actualizarTotalesestracto();
                    ;
                    break;
                case "Estrato 3":
                  estracto3 = elemento1 + elemento2 + elemento3;
                        actualizarTotalesestracto();
                    ;
                    break;
                case "Estrato 4":
                   estracto4 = elemento1 + elemento2 + elemento3;
                         actualizarTotalesestracto();
                    ;
                    break;
                case "Estrato 5":
                   estracto5 = elemento1 + elemento2 + elemento3;
                         actualizarTotalesestracto();
                    ;
                    break;
                case "Estrato 6":
                   estracto6 = elemento1 + elemento2 + elemento3;
                         actualizarTotalesestracto();
                    ;
                    break;

                default:
                    throw new AssertionError();
            }
        } );
  
    }
        private void actualizarTotalesestracto() {
        ElementosCheck[6] = estracto1 + estracto2 + estracto3 + estracto4 + estracto5 + estracto6;
        informe1.setValue(ElementosCheck[0]+ElementosCheck[1]+ElementosCheck[2] + ElementosCheck[3]+ElementosCheck[4]+ElementosCheck[5]+ElementosCheck[6]);
        grafica_check_barras();

    }
        
       
        
  

}//Fin del programa

